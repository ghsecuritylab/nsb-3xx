# Makefile.in generated by automake 1.11.6 from Makefile.am.
# drivers/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Network UPS Tools: drivers



am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/nut
pkgincludedir = $(includedir)/nut
pkglibdir = $(libdir)/nut
pkglibexecdir = $(libexecdir)/nut
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
am__append_1 = $(LIBUSB_CFLAGS)
#am__append_2 = $(LIBNETSNMP_CFLAGS)
#am__append_3 = $(LIBNEON_CFLAGS)
#am__append_4 = $(LIBPOWERMAN_CFLAGS)
#am__append_5 = $(LIBIPMI_CFLAGS)
EXTRA_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_4) \
	$(am__EXEEXT_5) $(am__EXEEXT_6)
driverexec_PROGRAMS = $(am__EXEEXT_7) \
	$(am__EXEEXT_8) $(am__EXEEXT_9) \
	$(am__EXEEXT_10) $(am__EXEEXT_11) \
	$(am__EXEEXT_12) $(am__EXEEXT_13)
#driverexec_PROGRAMS = $(DRIVER_BUILD_LIST) \
#	$(am__EXEEXT_7) $(am__EXEEXT_8) \
#	$(am__EXEEXT_9) $(am__EXEEXT_10) \
#	$(am__EXEEXT_11) $(am__EXEEXT_12) \
#	$(am__EXEEXT_13) skel$(EXEEXT)
am__append_6 = $(SERIAL_DRIVERLIST)
#am__append_7 = $(SNMP_DRIVERLIST)
am__append_8 = $(USB_LIBUSB_DRIVERLIST)
#am__append_9 = $(NEONXML_DRIVERLIST)
#am__append_10 = powerman-pdu
#am__append_11 = nut-ipmipsu
#am__append_12 = $(MACOSX_DRIVERLIST)
sbin_PROGRAMS = upsdrvctl$(EXEEXT)
am__append_13 = $(LIBSSL_CFLAGS)
am__append_14 = $(LIBSSL_LIBS)
#am__append_15 = nut-libfreeipmi.c 
am__append_16 = -DQX_SERIAL
am__append_17 = $(SERLIBS) serial.o
am__append_18 = -DQX_USB
am__append_19 = libusb.c usb-common.c
am__append_20 = $(LIBUSB_LIBS)
subdir = drivers
DIST_COMMON = $(dist_noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nut_arg_with.m4 \
	$(top_srcdir)/m4/nut_check_asciidoc.m4 \
	$(top_srcdir)/m4/nut_check_libavahi.m4 \
	$(top_srcdir)/m4/nut_check_libfreeipmi.m4 \
	$(top_srcdir)/m4/nut_check_libgd.m4 \
	$(top_srcdir)/m4/nut_check_libltdl.m4 \
	$(top_srcdir)/m4/nut_check_libneon.m4 \
	$(top_srcdir)/m4/nut_check_libnetsnmp.m4 \
	$(top_srcdir)/m4/nut_check_libnss.m4 \
	$(top_srcdir)/m4/nut_check_libopenssl.m4 \
	$(top_srcdir)/m4/nut_check_libpowerman.m4 \
	$(top_srcdir)/m4/nut_check_libusb.m4 \
	$(top_srcdir)/m4/nut_check_libwrap.m4 \
	$(top_srcdir)/m4/nut_check_os.m4 \
	$(top_srcdir)/m4/nut_report_feature.m4 \
	$(top_srcdir)/m4/nut_type_socklen_t.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
ARFLAGS = cru
libdummy_a_AR = $(AR) $(ARFLAGS)
libdummy_a_LIBADD =
am_libdummy_a_OBJECTS = main.$(OBJEXT) dstate.$(OBJEXT) \
	serial.$(OBJEXT)
libdummy_a_OBJECTS = $(am_libdummy_a_OBJECTS)
am__EXEEXT_1 = al175$(EXEEXT) bcmxcp$(EXEEXT) belkin$(EXEEXT) \
	belkinunv$(EXEEXT) bestfcom$(EXEEXT) bestfortress$(EXEEXT) \
	bestuferrups$(EXEEXT) bestups$(EXEEXT) dummy-ups$(EXEEXT) \
	etapro$(EXEEXT) everups$(EXEEXT) gamatronic$(EXEEXT) \
	genericups$(EXEEXT) isbmex$(EXEEXT) liebert$(EXEEXT) \
	liebert-esp2$(EXEEXT) masterguard$(EXEEXT) metasys$(EXEEXT) \
	oldmge-shut$(EXEEXT) mge-utalk$(EXEEXT) microdowell$(EXEEXT) \
	mge-shut$(EXEEXT) oneac$(EXEEXT) optiups$(EXEEXT) \
	powercom$(EXEEXT) rhino$(EXEEXT) safenet$(EXEEXT) \
	skel$(EXEEXT) solis$(EXEEXT) tripplite$(EXEEXT) \
	tripplitesu$(EXEEXT) upscode2$(EXEEXT) victronups$(EXEEXT) \
	powerpanel$(EXEEXT) blazer_ser$(EXEEXT) clone$(EXEEXT) \
	clone-outlet$(EXEEXT) ivtscd$(EXEEXT) apcsmart$(EXEEXT) \
	apcsmart-old$(EXEEXT) apcupsd-ups$(EXEEXT) riello_ser$(EXEEXT) \
	nutdrv_qx$(EXEEXT)
am__EXEEXT_2 = snmp-ups$(EXEEXT)
am__EXEEXT_3 = usbhid-ups$(EXEEXT) bcmxcp_usb$(EXEEXT) \
	tripplite_usb$(EXEEXT) blazer_usb$(EXEEXT) \
	richcomm_usb$(EXEEXT) riello_usb$(EXEEXT) \
	nutdrv_atcl_usb$(EXEEXT) nutdrv_qx$(EXEEXT) omron_usb$(EXEEXT)
am__EXEEXT_4 = $(am__EXEEXT_3)
am__EXEEXT_5 = netxml-ups$(EXEEXT)
am__EXEEXT_6 = macosx-ups$(EXEEXT)
am__EXEEXT_7 = $(am__EXEEXT_1)
#am__EXEEXT_8 = $(am__EXEEXT_2)
am__EXEEXT_9 = $(am__EXEEXT_3)
#am__EXEEXT_10 = $(am__EXEEXT_5)
#am__EXEEXT_11 = powerman-pdu$(EXEEXT)
#am__EXEEXT_12 =  \
#	nut-ipmipsu$(EXEEXT)
#am__EXEEXT_13 = $(am__EXEEXT_6)
am__installdirs = "$(DESTDIR)$(driverexecdir)" "$(DESTDIR)$(sbindir)"
PROGRAMS = $(driverexec_PROGRAMS) $(sbin_PROGRAMS)
am_al175_OBJECTS = al175.$(OBJEXT)
al175_OBJECTS = $(am_al175_OBJECTS)
al175_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1) serial.o
al175_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_apcsmart_OBJECTS = apcsmart.$(OBJEXT) apcsmart_tabs.$(OBJEXT)
apcsmart_OBJECTS = $(am_apcsmart_OBJECTS)
apcsmart_LDADD = $(LDADD)
apcsmart_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_apcsmart_old_OBJECTS = apcsmart-old.$(OBJEXT)
apcsmart_old_OBJECTS = $(am_apcsmart_old_OBJECTS)
apcsmart_old_LDADD = $(LDADD)
apcsmart_old_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_apcupsd_ups_OBJECTS = apcupsd_ups-apcupsd-ups.$(OBJEXT)
apcupsd_ups_OBJECTS = $(am_apcupsd_ups_OBJECTS)
apcupsd_ups_DEPENDENCIES = $(LDADD_DRIVERS)
apcupsd_ups_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(apcupsd_ups_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_bcmxcp_OBJECTS = bcmxcp.$(OBJEXT) bcmxcp_ser.$(OBJEXT)
bcmxcp_OBJECTS = $(am_bcmxcp_OBJECTS)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_2)
bcmxcp_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_bcmxcp_usb_OBJECTS = bcmxcp_usb.$(OBJEXT) bcmxcp.$(OBJEXT) \
	usb-common.$(OBJEXT)
bcmxcp_usb_OBJECTS = $(am_bcmxcp_usb_OBJECTS)
bcmxcp_usb_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1)
am_belkin_OBJECTS = belkin.$(OBJEXT)
belkin_OBJECTS = $(am_belkin_OBJECTS)
belkin_LDADD = $(LDADD)
belkin_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_belkinunv_OBJECTS = belkinunv.$(OBJEXT)
belkinunv_OBJECTS = $(am_belkinunv_OBJECTS)
belkinunv_LDADD = $(LDADD)
belkinunv_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_bestfcom_OBJECTS = bestfcom.$(OBJEXT)
bestfcom_OBJECTS = $(am_bestfcom_OBJECTS)
bestfcom_LDADD = $(LDADD)
bestfcom_DEPENDENCIES = $(am__DEPENDENCIES_2)
bestfortress_SOURCES = bestfortress.c
bestfortress_OBJECTS = bestfortress.$(OBJEXT)
bestfortress_LDADD = $(LDADD)
bestfortress_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_bestuferrups_OBJECTS = bestuferrups.$(OBJEXT)
bestuferrups_OBJECTS = $(am_bestuferrups_OBJECTS)
bestuferrups_LDADD = $(LDADD)
bestuferrups_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_bestups_OBJECTS = bestups.$(OBJEXT)
bestups_OBJECTS = $(am_bestups_OBJECTS)
bestups_LDADD = $(LDADD)
bestups_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_blazer_ser_OBJECTS = blazer.$(OBJEXT) blazer_ser.$(OBJEXT)
blazer_ser_OBJECTS = $(am_blazer_ser_OBJECTS)
blazer_ser_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_blazer_usb_OBJECTS = blazer.$(OBJEXT) blazer_usb.$(OBJEXT) \
	libusb.$(OBJEXT) usb-common.$(OBJEXT)
blazer_usb_OBJECTS = $(am_blazer_usb_OBJECTS)
blazer_usb_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1)
am_clone_OBJECTS = clone.$(OBJEXT)
clone_OBJECTS = $(am_clone_OBJECTS)
clone_LDADD = $(LDADD)
clone_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_clone_outlet_OBJECTS = clone-outlet.$(OBJEXT)
clone_outlet_OBJECTS = $(am_clone_outlet_OBJECTS)
clone_outlet_LDADD = $(LDADD)
clone_outlet_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_dummy_ups_OBJECTS = dummy_ups-dummy-ups.$(OBJEXT)
dummy_ups_OBJECTS = $(am_dummy_ups_OBJECTS)
am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
dummy_ups_DEPENDENCIES = $(LDADD_DRIVERS) ../clients/libupsclient.la \
	$(am__DEPENDENCIES_4)
dummy_ups_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dummy_ups_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_etapro_OBJECTS = etapro.$(OBJEXT)
etapro_OBJECTS = $(am_etapro_OBJECTS)
etapro_LDADD = $(LDADD)
etapro_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_everups_OBJECTS = everups.$(OBJEXT)
everups_OBJECTS = $(am_everups_OBJECTS)
everups_LDADD = $(LDADD)
everups_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_gamatronic_OBJECTS = gamatronic.$(OBJEXT)
gamatronic_OBJECTS = $(am_gamatronic_OBJECTS)
gamatronic_LDADD = $(LDADD)
gamatronic_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_genericups_OBJECTS = genericups.$(OBJEXT)
genericups_OBJECTS = $(am_genericups_OBJECTS)
genericups_LDADD = $(LDADD)
genericups_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_isbmex_OBJECTS = isbmex.$(OBJEXT)
isbmex_OBJECTS = $(am_isbmex_OBJECTS)
isbmex_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_ivtscd_OBJECTS = ivtscd.$(OBJEXT)
ivtscd_OBJECTS = $(am_ivtscd_OBJECTS)
ivtscd_LDADD = $(LDADD)
ivtscd_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_liebert_OBJECTS = liebert.$(OBJEXT)
liebert_OBJECTS = $(am_liebert_OBJECTS)
liebert_LDADD = $(LDADD)
liebert_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_liebert_esp2_OBJECTS = liebert-esp2.$(OBJEXT)
liebert_esp2_OBJECTS = $(am_liebert_esp2_OBJECTS)
liebert_esp2_LDADD = $(LDADD)
liebert_esp2_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_macosx_ups_OBJECTS = macosx-ups.$(OBJEXT)
macosx_ups_OBJECTS = $(am_macosx_ups_OBJECTS)
macosx_ups_DEPENDENCIES = $(LDADD_DRIVERS)
macosx_ups_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(macosx_ups_LDFLAGS) $(LDFLAGS) -o $@
am_masterguard_OBJECTS = masterguard.$(OBJEXT)
masterguard_OBJECTS = $(am_masterguard_OBJECTS)
masterguard_LDADD = $(LDADD)
masterguard_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_metasys_OBJECTS = metasys.$(OBJEXT)
metasys_OBJECTS = $(am_metasys_OBJECTS)
metasys_LDADD = $(LDADD)
metasys_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_mge_shut_OBJECTS = mge_shut-usbhid-ups.$(OBJEXT) \
	mge_shut-libshut.$(OBJEXT) mge_shut-libhid.$(OBJEXT) \
	mge_shut-hidparser.$(OBJEXT) mge_shut-mge-hid.$(OBJEXT)
mge_shut_OBJECTS = $(am_mge_shut_OBJECTS)
mge_shut_DEPENDENCIES = $(am__DEPENDENCIES_3)
mge_shut_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(mge_shut_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mge_utalk_OBJECTS = mge-utalk.$(OBJEXT)
mge_utalk_OBJECTS = $(am_mge_utalk_OBJECTS)
mge_utalk_LDADD = $(LDADD)
mge_utalk_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_microdowell_OBJECTS = microdowell.$(OBJEXT)
microdowell_OBJECTS = $(am_microdowell_OBJECTS)
microdowell_LDADD = $(LDADD)
microdowell_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_netxml_ups_OBJECTS = netxml-ups.$(OBJEXT) mge-xml.$(OBJEXT)
netxml_ups_OBJECTS = $(am_netxml_ups_OBJECTS)
netxml_ups_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1)
am__nut_ipmipsu_SOURCES_DIST = nut-ipmipsu.c nut-libfreeipmi.c
#am__objects_1 = nut-libfreeipmi.$(OBJEXT)
am_nut_ipmipsu_OBJECTS = nut-ipmipsu.$(OBJEXT) $(am__objects_1)
nut_ipmipsu_OBJECTS = $(am_nut_ipmipsu_OBJECTS)
nut_ipmipsu_DEPENDENCIES = $(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1)
am_nutdrv_atcl_usb_OBJECTS = nutdrv_atcl_usb.$(OBJEXT) \
	usb-common.$(OBJEXT)
nutdrv_atcl_usb_OBJECTS = $(am_nutdrv_atcl_usb_OBJECTS)
nutdrv_atcl_usb_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1)
am__nutdrv_qx_SOURCES_DIST = nutdrv_qx.c libusb.c usb-common.c \
	nutdrv_qx_blazer-common.c nutdrv_qx_mecer.c \
	nutdrv_qx_megatec.c nutdrv_qx_megatec-old.c nutdrv_qx_mustek.c \
	nutdrv_qx_q1.c nutdrv_qx_voltronic.c nutdrv_qx_voltronic-qs.c \
	nutdrv_qx_zinto.c
am__objects_2 = nutdrv_qx-libusb.$(OBJEXT) \
	nutdrv_qx-usb-common.$(OBJEXT)
am__objects_3 = nutdrv_qx-nutdrv_qx_blazer-common.$(OBJEXT) \
	nutdrv_qx-nutdrv_qx_mecer.$(OBJEXT) \
	nutdrv_qx-nutdrv_qx_megatec.$(OBJEXT) \
	nutdrv_qx-nutdrv_qx_megatec-old.$(OBJEXT) \
	nutdrv_qx-nutdrv_qx_mustek.$(OBJEXT) \
	nutdrv_qx-nutdrv_qx_q1.$(OBJEXT) \
	nutdrv_qx-nutdrv_qx_voltronic.$(OBJEXT) \
	nutdrv_qx-nutdrv_qx_voltronic-qs.$(OBJEXT) \
	nutdrv_qx-nutdrv_qx_zinto.$(OBJEXT)
am_nutdrv_qx_OBJECTS = nutdrv_qx-nutdrv_qx.$(OBJEXT) $(am__objects_2) \
	$(am__objects_3)
nutdrv_qx_OBJECTS = $(am_nutdrv_qx_OBJECTS)
am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1) serial.o
am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
nutdrv_qx_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_6)
nutdrv_qx_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(nutdrv_qx_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_oldmge_shut_OBJECTS = mge-shut.$(OBJEXT) hidparser.$(OBJEXT)
oldmge_shut_OBJECTS = $(am_oldmge_shut_OBJECTS)
oldmge_shut_LDADD = $(LDADD)
oldmge_shut_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_omron_usb_OBJECTS = omron.$(OBJEXT) omron_usb.$(OBJEXT) \
	libusb.$(OBJEXT) usb-common.$(OBJEXT)
omron_usb_OBJECTS = $(am_omron_usb_OBJECTS)
omron_usb_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1)
am_oneac_OBJECTS = oneac.$(OBJEXT)
oneac_OBJECTS = $(am_oneac_OBJECTS)
oneac_LDADD = $(LDADD)
oneac_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_optiups_OBJECTS = optiups.$(OBJEXT)
optiups_OBJECTS = $(am_optiups_OBJECTS)
optiups_LDADD = $(LDADD)
optiups_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_powercom_OBJECTS = powercom.$(OBJEXT)
powercom_OBJECTS = $(am_powercom_OBJECTS)
powercom_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_powerman_pdu_OBJECTS = powerman-pdu.$(OBJEXT)
powerman_pdu_OBJECTS = $(am_powerman_pdu_OBJECTS)
powerman_pdu_DEPENDENCIES = $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_1)
am_powerpanel_OBJECTS = powerpanel.$(OBJEXT) powerp-bin.$(OBJEXT) \
	powerp-txt.$(OBJEXT)
powerpanel_OBJECTS = $(am_powerpanel_OBJECTS)
powerpanel_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_rhino_OBJECTS = rhino.$(OBJEXT)
rhino_OBJECTS = $(am_rhino_OBJECTS)
rhino_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_richcomm_usb_OBJECTS = richcomm_usb.$(OBJEXT) usb-common.$(OBJEXT)
richcomm_usb_OBJECTS = $(am_richcomm_usb_OBJECTS)
richcomm_usb_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1)
am_riello_ser_OBJECTS = riello.$(OBJEXT) riello_ser.$(OBJEXT)
riello_ser_OBJECTS = $(am_riello_ser_OBJECTS)
riello_ser_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_riello_usb_OBJECTS = riello.$(OBJEXT) riello_usb.$(OBJEXT) \
	libusb.$(OBJEXT) usb-common.$(OBJEXT)
riello_usb_OBJECTS = $(am_riello_usb_OBJECTS)
riello_usb_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1)
am_safenet_OBJECTS = safenet.$(OBJEXT)
safenet_OBJECTS = $(am_safenet_OBJECTS)
safenet_LDADD = $(LDADD)
safenet_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_skel_OBJECTS = skel.$(OBJEXT)
skel_OBJECTS = $(am_skel_OBJECTS)
skel_DEPENDENCIES = $(LDADD_DRIVERS)
am_snmp_ups_OBJECTS = snmp-ups.$(OBJEXT) apc-mib.$(OBJEXT) \
	baytech-mib.$(OBJEXT) compaq-mib.$(OBJEXT) eaton-mib.$(OBJEXT) \
	ietf-mib.$(OBJEXT) mge-mib.$(OBJEXT) netvision-mib.$(OBJEXT) \
	powerware-mib.$(OBJEXT) raritan-pdu-mib.$(OBJEXT) \
	bestpower-mib.$(OBJEXT) cyberpower-mib.$(OBJEXT) \
	delta_ups-mib.$(OBJEXT) xppc-mib.$(OBJEXT)
snmp_ups_OBJECTS = $(am_snmp_ups_OBJECTS)
snmp_ups_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1)
am_solis_OBJECTS = solis.$(OBJEXT)
solis_OBJECTS = $(am_solis_OBJECTS)
solis_LDADD = $(LDADD)
solis_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_tripplite_OBJECTS = tripplite.$(OBJEXT)
tripplite_OBJECTS = $(am_tripplite_OBJECTS)
tripplite_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_tripplite_usb_OBJECTS = tripplite_usb.$(OBJEXT) libusb.$(OBJEXT) \
	usb-common.$(OBJEXT)
tripplite_usb_OBJECTS = $(am_tripplite_usb_OBJECTS)
tripplite_usb_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1)
am_tripplitesu_OBJECTS = tripplitesu.$(OBJEXT)
tripplitesu_OBJECTS = $(am_tripplitesu_OBJECTS)
tripplitesu_LDADD = $(LDADD)
tripplitesu_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_upscode2_OBJECTS = upscode2.$(OBJEXT)
upscode2_OBJECTS = $(am_upscode2_OBJECTS)
upscode2_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_upsdrvctl_OBJECTS = upsdrvctl.$(OBJEXT)
upsdrvctl_OBJECTS = $(am_upsdrvctl_OBJECTS)
upsdrvctl_DEPENDENCIES = $(LDADD_COMMON)
am__objects_4 = apc-hid.$(OBJEXT) belkin-hid.$(OBJEXT) \
	cps-hid.$(OBJEXT) explore-hid.$(OBJEXT) liebert-hid.$(OBJEXT) \
	mge-hid.$(OBJEXT) powercom-hid.$(OBJEXT) \
	tripplite-hid.$(OBJEXT) idowell-hid.$(OBJEXT) \
	openups-hid.$(OBJEXT) fuji-hid.$(OBJEXT)
am_usbhid_ups_OBJECTS = usbhid-ups.$(OBJEXT) libhid.$(OBJEXT) \
	libusb.$(OBJEXT) hidparser.$(OBJEXT) usb-common.$(OBJEXT) \
	$(am__objects_4)
usbhid_ups_OBJECTS = $(am_usbhid_ups_OBJECTS)
usbhid_ups_DEPENDENCIES = $(LDADD_DRIVERS) $(am__DEPENDENCIES_1)
am_victronups_OBJECTS = victronups.$(OBJEXT)
victronups_OBJECTS = $(am_victronups_OBJECTS)
victronups_LDADD = $(LDADD)
victronups_DEPENDENCIES = $(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libdummy_a_SOURCES) $(al175_SOURCES) $(apcsmart_SOURCES) \
	$(apcsmart_old_SOURCES) $(apcupsd_ups_SOURCES) \
	$(bcmxcp_SOURCES) $(bcmxcp_usb_SOURCES) $(belkin_SOURCES) \
	$(belkinunv_SOURCES) $(bestfcom_SOURCES) bestfortress.c \
	$(bestuferrups_SOURCES) $(bestups_SOURCES) \
	$(blazer_ser_SOURCES) $(blazer_usb_SOURCES) $(clone_SOURCES) \
	$(clone_outlet_SOURCES) $(dummy_ups_SOURCES) $(etapro_SOURCES) \
	$(everups_SOURCES) $(gamatronic_SOURCES) $(genericups_SOURCES) \
	$(isbmex_SOURCES) $(ivtscd_SOURCES) $(liebert_SOURCES) \
	$(liebert_esp2_SOURCES) $(macosx_ups_SOURCES) \
	$(masterguard_SOURCES) $(metasys_SOURCES) $(mge_shut_SOURCES) \
	$(mge_utalk_SOURCES) $(microdowell_SOURCES) \
	$(netxml_ups_SOURCES) $(nut_ipmipsu_SOURCES) \
	$(nutdrv_atcl_usb_SOURCES) $(nutdrv_qx_SOURCES) \
	$(oldmge_shut_SOURCES) $(omron_usb_SOURCES) $(oneac_SOURCES) \
	$(optiups_SOURCES) $(powercom_SOURCES) $(powerman_pdu_SOURCES) \
	$(powerpanel_SOURCES) $(rhino_SOURCES) $(richcomm_usb_SOURCES) \
	$(riello_ser_SOURCES) $(riello_usb_SOURCES) $(safenet_SOURCES) \
	$(skel_SOURCES) $(snmp_ups_SOURCES) $(solis_SOURCES) \
	$(tripplite_SOURCES) $(tripplite_usb_SOURCES) \
	$(tripplitesu_SOURCES) $(upscode2_SOURCES) \
	$(upsdrvctl_SOURCES) $(usbhid_ups_SOURCES) \
	$(victronups_SOURCES)
DIST_SOURCES = $(libdummy_a_SOURCES) $(al175_SOURCES) \
	$(apcsmart_SOURCES) $(apcsmart_old_SOURCES) \
	$(apcupsd_ups_SOURCES) $(bcmxcp_SOURCES) $(bcmxcp_usb_SOURCES) \
	$(belkin_SOURCES) $(belkinunv_SOURCES) $(bestfcom_SOURCES) \
	bestfortress.c $(bestuferrups_SOURCES) $(bestups_SOURCES) \
	$(blazer_ser_SOURCES) $(blazer_usb_SOURCES) $(clone_SOURCES) \
	$(clone_outlet_SOURCES) $(dummy_ups_SOURCES) $(etapro_SOURCES) \
	$(everups_SOURCES) $(gamatronic_SOURCES) $(genericups_SOURCES) \
	$(isbmex_SOURCES) $(ivtscd_SOURCES) $(liebert_SOURCES) \
	$(liebert_esp2_SOURCES) $(macosx_ups_SOURCES) \
	$(masterguard_SOURCES) $(metasys_SOURCES) $(mge_shut_SOURCES) \
	$(mge_utalk_SOURCES) $(microdowell_SOURCES) \
	$(netxml_ups_SOURCES) $(am__nut_ipmipsu_SOURCES_DIST) \
	$(nutdrv_atcl_usb_SOURCES) $(am__nutdrv_qx_SOURCES_DIST) \
	$(oldmge_shut_SOURCES) $(omron_usb_SOURCES) $(oneac_SOURCES) \
	$(optiups_SOURCES) $(powercom_SOURCES) $(powerman_pdu_SOURCES) \
	$(powerpanel_SOURCES) $(rhino_SOURCES) $(richcomm_usb_SOURCES) \
	$(riello_ser_SOURCES) $(riello_usb_SOURCES) $(safenet_SOURCES) \
	$(skel_SOURCES) $(snmp_ups_SOURCES) $(solis_SOURCES) \
	$(tripplite_SOURCES) $(tripplite_usb_SOURCES) \
	$(tripplitesu_SOURCES) $(upscode2_SOURCES) \
	$(upsdrvctl_SOURCES) $(usbhid_ups_SOURCES) \
	$(victronups_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(dist_noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
A2X = none
ACLOCAL = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/nut-2.7.2/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = /usr/bin/ar
ASCIIDOC = none
ASPELL = /usr/bin/aspell
AUTOCONF = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/nut-2.7.2/missing --run autoconf
AUTOHEADER = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/nut-2.7.2/missing --run autoheader
AUTOMAKE = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/nut-2.7.2/missing --run automake-1.11
AWK = gawk
BINDIR = /usr/bin
CC = arm-openwrt-linux-uclibcgnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O -pipe -march=armv7-a -mtune=cortex-a9 -funit-at-a-time -mfpu=neon -ftree-vectorize -mfloat-abi=softfp -fhonour-copts -fpic -lm -Wall -Wsign-compare
CONFPATH = /usr/etc
CPP = arm-openwrt-linux-uclibcgnueabi-gcc -E
CPPFLAGS = 
CPPUNIT_CFLAGS = 
CPPUNIT_LIBS = 
CXX = arm-openwrt-linux-uclibcgnueabi-g++
CXXCPP = arm-openwrt-linux-uclibcgnueabi-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DBLATEX = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOC_BUILD_LIST = 
DRIVER_BUILD_LIST = all
DRIVER_INSTALL_TARGET = 
DRIVER_MAN_LIST = all
DRVPATH = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = arm-openwrt-linux-uclibcgnueabi-ld
LDFLAGS = 
LIBAVAHI_CFLAGS = 
LIBAVAHI_LIBS = 
LIBGD_CFLAGS = 
LIBGD_LDFLAGS = 
LIBIPMI_CFLAGS = 
LIBIPMI_LIBS = 
LIBLTDL_CFLAGS = 
LIBLTDL_LIBS = 
LIBNEON_CFLAGS = 
LIBNEON_LIBS = 
LIBNETSNMP_CFLAGS = -DNETSNMP_ENABLE_IPV6 -fno-strict-aliasing -O -pipe -march=armv7-a -mtune=cortex-a9 -funit-at-a-time -mfpu=neon -ftree-vectorize -mfloat-abi=softfp -fhonour-copts -fpic -Ulinux -Dlinux=linux -I/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/include -I/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/include -I/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/usr/include -I/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/include -I/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/include
LIBNETSNMP_LIBS = -L/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/lib -L/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/lib -L/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/usr/lib -L/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/lib -L/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/usr/lib -L/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/lib -lnetsnmp
LIBOBJS = 
LIBPOWERMAN_CFLAGS = 
LIBPOWERMAN_LIBS = 
LIBS = -lpthread 
LIBSSL_CFLAGS = -I/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr//include  
LIBSSL_LIBS = -L/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr//lib -lssl -lcrypto  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUSB_CFLAGS = -I/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr//include  
LIBUSB_LIBS = -L/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr//lib -lusb  
LIBWRAP_CFLAGS = 
LIBWRAP_LIBS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/nut-2.7.2/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NETLIBS = 
NM = arm-openwrt-linux-uclibcgnueabi-nm
NMEDIT = 
NUT_NETVERSION = 1.2
OBJDUMP = arm-openwrt-linux-uclibcgnueabi-objdump
OBJEXT = o
OS_NAME = ubuntu
OTOOL = 
OTOOL64 = 
PACKAGE = nut
PACKAGE_BUGREPORT = 
PACKAGE_NAME = nut
PACKAGE_STRING = nut 2.7.2
PACKAGE_TARNAME = nut
PACKAGE_URL = 
PACKAGE_VERSION = 2.7.2
PATH_SEPARATOR = :
PIDPATH = /var/run
PKG_CONFIG = /home/igarashi/cortina/staging_dir/host/bin/pkg-config
PKG_CONFIG_LIBDIR = /home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/lib/pkgconfig
PKG_CONFIG_PATH = /home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/lib/pkgconfig
PORT = 3493
RANLIB = arm-openwrt-linux-uclibcgnueabi-ranlib
RUN_AS_GROUP = nobody
RUN_AS_USER = nobody
SBINDIR = /usr/sbin
SED = /home/igarashi/cortina/staging_dir/host/bin/sed
SERLIBS = 
SET_MAKE = 
SHELL = /bin/bash
STATEPATH = /var/state/ups
STRIP = arm-openwrt-linux-uclibcgnueabi-strip
SUN_LIBUSB = 
TREE_VERSION = 2.7
VERSION = 2.7.2
WORDS_BIGENDIAN = 
abs_builddir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/nut-2.7.2/drivers
abs_srcdir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/nut-2.7.2/drivers
abs_top_builddir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/nut-2.7.2
abs_top_srcdir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/nut-2.7.2
ac_ct_AR = 
ac_ct_CC = arm-openwrt-linux-uclibcgnueabi-gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
cgiexecdir = ${exec_prefix}/cgi-bin
datadir = ${datarootdir}
datarootdir = ${prefix}/share
devddir = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
driverexecdir = ${exec_prefix}/bin
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
hotplugdir = 
htmldir = ${prefix}/html
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/nut-2.7.2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgconfigdir = ${libdir}/pkgconfig
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
systemdsystemshutdowndir = 
systemdsystemunitdir = 
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
udevdir = /lib/udev

# by default, link programs in this directory with libcommon.la
# (libtool version of the static lib, in order to access LTLIBOBJS)
#FIXME: SERLIBS is only useful for LDADD_DRIVERS_SERIAL not for LDADD_COMMON
LDADD_COMMON = ../common/libcommon.la ../common/libparseconf.la
LDADD_DRIVERS = $(LDADD_COMMON) main.o dstate.o
LDADD_DRIVERS_SERIAL = $(LDADD_DRIVERS) $(SERLIBS) serial.o

# most targets are drivers, so make this the default
LDADD = $(LDADD_DRIVERS_SERIAL)
# Avoid per-target CFLAGS, because this will prevent re-use of object
# files. In any case, CFLAGS are only -I options, so there is no harm,
# but only add them if we really use the target.
AM_CFLAGS = -I$(top_srcdir)/include $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_5)
SERIAL_DRIVERLIST = al175 bcmxcp belkin belkinunv bestfcom	\
 bestfortress bestuferrups bestups dummy-ups etapro everups 	\
 gamatronic genericups isbmex liebert liebert-esp2 masterguard metasys	\
 oldmge-shut mge-utalk microdowell mge-shut oneac optiups powercom rhino 	\
 safenet skel solis tripplite tripplitesu upscode2 victronups powerpanel \
 blazer_ser clone clone-outlet ivtscd apcsmart apcsmart-old apcupsd-ups riello_ser	\
 nutdrv_qx

SNMP_DRIVERLIST = snmp-ups
USB_LIBUSB_DRIVERLIST = usbhid-ups bcmxcp_usb tripplite_usb \
 blazer_usb richcomm_usb riello_usb \
 nutdrv_atcl_usb \
 nutdrv_qx \
 omron_usb

USB_DRIVERLIST = $(USB_LIBUSB_DRIVERLIST)
NEONXML_DRIVERLIST = netxml-ups
MACOSX_DRIVERLIST = macosx-ups

# ==========================================================================
# Driver build details

# upsdrvctl: the all-singing all-dancing driver control program
upsdrvctl_SOURCES = upsdrvctl.c
upsdrvctl_LDADD = $(LDADD_COMMON)

# serial drivers: all of them use standard LDADD and CFLAGS
al175_SOURCES = al175.c
apcsmart_SOURCES = apcsmart.c apcsmart_tabs.c
apcsmart_old_SOURCES = apcsmart-old.c
bcmxcp_SOURCES = bcmxcp.c bcmxcp_ser.c
bcmxcp_LDADD = $(LDADD) -lm
belkin_SOURCES = belkin.c
belkinunv_SOURCES = belkinunv.c
bestfcom_SOURCES = bestfcom.c
bestuferrups_SOURCES = bestuferrups.c
bestups_SOURCES = bestups.c
blazer_ser_SOURCES = blazer.c blazer_ser.c
blazer_ser_LDADD = $(LDADD) -lm
etapro_SOURCES = etapro.c
everups_SOURCES = everups.c
gamatronic_SOURCES = gamatronic.c
genericups_SOURCES = genericups.c
isbmex_SOURCES = isbmex.c
isbmex_LDADD = $(LDADD) -lm
ivtscd_SOURCES = ivtscd.c
liebert_SOURCES = liebert.c
liebert_esp2_SOURCES = liebert-esp2.c
masterguard_SOURCES = masterguard.c
metasys_SOURCES = metasys.c
oldmge_shut_SOURCES = mge-shut.c hidparser.c
mge_utalk_SOURCES = mge-utalk.c
microdowell_SOURCES = microdowell.c
oneac_SOURCES = oneac.c
optiups_SOURCES = optiups.c
powercom_SOURCES = powercom.c
powercom_LDADD = $(LDADD) -lm
powerpanel_SOURCES = powerpanel.c powerp-bin.c powerp-txt.c
powerpanel_LDADD = $(LDADD) -lm
rhino_SOURCES = rhino.c
rhino_LDADD = $(LDADD) -lm
safenet_SOURCES = safenet.c
solis_SOURCES = solis.c
tripplite_SOURCES = tripplite.c
tripplite_LDADD = $(LDADD) -lm
tripplitesu_SOURCES = tripplitesu.c
upscode2_SOURCES = upscode2.c
upscode2_LDADD = $(LDADD) -lm
victronups_SOURCES = victronups.c
riello_ser_SOURCES = riello.c riello_ser.c
riello_ser_LDADD = $(LDADD) -lm

# non-serial drivers: these use custom LDADD and/or CFLAGS

# dummy
dummy_ups_SOURCES = dummy-ups.c
dummy_ups_CFLAGS = $(AM_CFLAGS) -I$(top_srcdir)/clients \
	$(am__append_13)
dummy_ups_LDADD = $(LDADD_DRIVERS) ../clients/libupsclient.la \
	$(am__append_14)

# Clone drivers
clone_SOURCES = clone.c
clone_outlet_SOURCES = clone-outlet.c

# apcupsd client driver
apcupsd_ups_SOURCES = apcupsd-ups.c
apcupsd_ups_CFLAGS = $(AM_CFLAGS)
apcupsd_ups_LDADD = $(LDADD_DRIVERS)

# sample skeleton driver
skel_SOURCES = skel.c
skel_LDADD = $(LDADD_DRIVERS)

# USB
USBHID_UPS_SUBDRIVERS = apc-hid.c belkin-hid.c cps-hid.c explore-hid.c \
 liebert-hid.c mge-hid.c powercom-hid.c tripplite-hid.c idowell-hid.c \
 openups-hid.c fuji-hid.c

usbhid_ups_SOURCES = usbhid-ups.c libhid.c libusb.c hidparser.c	\
 usb-common.c $(USBHID_UPS_SUBDRIVERS)

usbhid_ups_LDADD = $(LDADD_DRIVERS) $(LIBUSB_LIBS)
tripplite_usb_SOURCES = tripplite_usb.c libusb.c usb-common.c
tripplite_usb_LDADD = $(LDADD_DRIVERS) $(LIBUSB_LIBS) -lm
bcmxcp_usb_SOURCES = bcmxcp_usb.c bcmxcp.c usb-common.c
bcmxcp_usb_LDADD = $(LDADD_DRIVERS) $(LIBUSB_LIBS)
blazer_usb_SOURCES = blazer.c blazer_usb.c libusb.c usb-common.c
blazer_usb_LDADD = $(LDADD_DRIVERS) $(LIBUSB_LIBS) -lm
nutdrv_atcl_usb_SOURCES = nutdrv_atcl_usb.c usb-common.c
nutdrv_atcl_usb_LDADD = $(LDADD_DRIVERS) $(LIBUSB_LIBS)
richcomm_usb_SOURCES = richcomm_usb.c usb-common.c
richcomm_usb_LDADD = $(LDADD_DRIVERS) $(LIBUSB_LIBS)
riello_usb_SOURCES = riello.c riello_usb.c libusb.c usb-common.c
riello_usb_LDADD = $(LDADD_DRIVERS) $(LIBUSB_LIBS) -lm
omron_usb_SOURCES = omron.c omron_usb.c libusb.c usb-common.c
omron_usb_LDADD = $(LDADD_DRIVERS) $(LIBUSB_LIBS) -lm

# HID-over-serial
mge_shut_SOURCES = usbhid-ups.c libshut.c libhid.c hidparser.c mge-hid.c
# per-target CFLAGS are necessary here
mge_shut_CFLAGS = $(AM_CFLAGS) -DSHUT_MODE
mge_shut_LDADD = $(LDADD)

# SNMP
snmp_ups_SOURCES = snmp-ups.c apc-mib.c baytech-mib.c compaq-mib.c eaton-mib.c \
 ietf-mib.c mge-mib.c netvision-mib.c powerware-mib.c raritan-pdu-mib.c \
 bestpower-mib.c cyberpower-mib.c delta_ups-mib.c \
 xppc-mib.c

snmp_ups_LDADD = $(LDADD_DRIVERS) $(LIBNETSNMP_LIBS)

# NEON XML/HTTP
netxml_ups_SOURCES = netxml-ups.c mge-xml.c
netxml_ups_LDADD = $(LDADD_DRIVERS) $(LIBNEON_LIBS)

# Powerman
powerman_pdu_SOURCES = powerman-pdu.c
powerman_pdu_LDADD = $(LDADD) $(LIBPOWERMAN_LIBS)

# IPMI PSU
nut_ipmipsu_SOURCES = nut-ipmipsu.c $(am__append_15)
nut_ipmipsu_LDADD = $(LDADD) $(LIBIPMI_LIBS)

# Mac OS X metadriver
macosx_ups_LDADD = $(LDADD_DRIVERS)
macosx_ups_LDFLAGS = $(LDFLAGS) -framework IOKit -framework CoreFoundation
macosx_ups_SOURCES = macosx-ups.c

# nutdrv_qx USB/Serial
nutdrv_qx_SOURCES = nutdrv_qx.c $(am__append_19) \
	$(NUTDRV_QX_SUBDRIVERS)
nutdrv_qx_LDADD = $(LDADD_DRIVERS) -lm $(am__append_17) \
	$(am__append_20)
nutdrv_qx_CFLAGS = $(AM_CFLAGS) $(am__append_16) $(am__append_18)
NUTDRV_QX_SUBDRIVERS = nutdrv_qx_blazer-common.c nutdrv_qx_mecer.c	\
 nutdrv_qx_megatec.c nutdrv_qx_megatec-old.c nutdrv_qx_mustek.c	\
 nutdrv_qx_q1.c nutdrv_qx_voltronic.c nutdrv_qx_voltronic-qs.c nutdrv_qx_zinto.c


# ----------------------------------------------------------------------
# List of header files. The purpose of this list is not dependency
# tracking (which is automatic), but to ensure these files are
# distributed by "make dist".
dist_noinst_HEADERS = apc-mib.h apc-hid.h baytech-mib.h bcmxcp.h	\
 bcmxcp_io.h belkin.h belkin-hid.h bestpower-mib.h blazer.h cps-hid.h dstate.h \
 dummy-ups.h eaton-mib.h explore-hid.h gamatronic.h genericups.h	\
 hidparser.h hidtypes.h ietf-mib.h libhid.h libshut.h libusb.h liebert-hid.h	\
 main.h mge-hid.h mge-mib.h mge-shut.h mge-utalk.h		\
 mge-xml.h microdowell.h netvision-mib.h netxml-ups.h nut-ipmi.h oneac.h		\
 powercom.h powerpanel.h powerp-bin.h powerp-txt.h powerware-mib.h raritan-pdu-mib.h	\
 safenet.h serial.h snmp-ups.h solis.h tripplite.h tripplite-hid.h 			\
 upshandler.h usb-common.h usbhid-ups.h powercom-hid.h compaq-mib.h idowell-hid.h \
 apcsmart.h apcsmart_tabs.h apcsmart-old.h apcupsd-ups.h cyberpower-mib.h riello.h openups-hid.h \
 delta_ups-mib.h nutdrv_qx.h nutdrv_qx_blazer-common.h nutdrv_qx_mecer.h	\
 nutdrv_qx_megatec.h nutdrv_qx_megatec-old.h nutdrv_qx_mustek.h nutdrv_qx_q1.h	\
 nutdrv_qx_voltronic.h nutdrv_qx_voltronic-qs.h nutdrv_qx_zinto.h \
 xppc-mib.h omron.h fuji-hid.h


# Define a dummy library so that Automake builds rules for the
# corresponding object files.  This library is not actually built,
EXTRA_LIBRARIES = libdummy.a
libdummy_a_SOURCES = main.c dstate.c serial.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu drivers/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu drivers/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libdummy.a: $(libdummy_a_OBJECTS) $(libdummy_a_DEPENDENCIES) $(EXTRA_libdummy_a_DEPENDENCIES) 
	-rm -f libdummy.a
	$(libdummy_a_AR) libdummy.a $(libdummy_a_OBJECTS) $(libdummy_a_LIBADD)
	$(RANLIB) libdummy.a
install-driverexecPROGRAMS: $(driverexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(driverexec_PROGRAMS)'; test -n "$(driverexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(driverexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(driverexecdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(driverexecdir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(driverexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-driverexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(driverexec_PROGRAMS)'; test -n "$(driverexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(driverexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(driverexecdir)" && rm -f $$files

clean-driverexecPROGRAMS:
	@list='$(driverexec_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
al175$(EXEEXT): $(al175_OBJECTS) $(al175_DEPENDENCIES) $(EXTRA_al175_DEPENDENCIES) 
	@rm -f al175$(EXEEXT)
	$(LINK) $(al175_OBJECTS) $(al175_LDADD) $(LIBS)
apcsmart$(EXEEXT): $(apcsmart_OBJECTS) $(apcsmart_DEPENDENCIES) $(EXTRA_apcsmart_DEPENDENCIES) 
	@rm -f apcsmart$(EXEEXT)
	$(LINK) $(apcsmart_OBJECTS) $(apcsmart_LDADD) $(LIBS)
apcsmart-old$(EXEEXT): $(apcsmart_old_OBJECTS) $(apcsmart_old_DEPENDENCIES) $(EXTRA_apcsmart_old_DEPENDENCIES) 
	@rm -f apcsmart-old$(EXEEXT)
	$(LINK) $(apcsmart_old_OBJECTS) $(apcsmart_old_LDADD) $(LIBS)
apcupsd-ups$(EXEEXT): $(apcupsd_ups_OBJECTS) $(apcupsd_ups_DEPENDENCIES) $(EXTRA_apcupsd_ups_DEPENDENCIES) 
	@rm -f apcupsd-ups$(EXEEXT)
	$(apcupsd_ups_LINK) $(apcupsd_ups_OBJECTS) $(apcupsd_ups_LDADD) $(LIBS)
bcmxcp$(EXEEXT): $(bcmxcp_OBJECTS) $(bcmxcp_DEPENDENCIES) $(EXTRA_bcmxcp_DEPENDENCIES) 
	@rm -f bcmxcp$(EXEEXT)
	$(LINK) $(bcmxcp_OBJECTS) $(bcmxcp_LDADD) $(LIBS)
bcmxcp_usb$(EXEEXT): $(bcmxcp_usb_OBJECTS) $(bcmxcp_usb_DEPENDENCIES) $(EXTRA_bcmxcp_usb_DEPENDENCIES) 
	@rm -f bcmxcp_usb$(EXEEXT)
	$(LINK) $(bcmxcp_usb_OBJECTS) $(bcmxcp_usb_LDADD) $(LIBS)
belkin$(EXEEXT): $(belkin_OBJECTS) $(belkin_DEPENDENCIES) $(EXTRA_belkin_DEPENDENCIES) 
	@rm -f belkin$(EXEEXT)
	$(LINK) $(belkin_OBJECTS) $(belkin_LDADD) $(LIBS)
belkinunv$(EXEEXT): $(belkinunv_OBJECTS) $(belkinunv_DEPENDENCIES) $(EXTRA_belkinunv_DEPENDENCIES) 
	@rm -f belkinunv$(EXEEXT)
	$(LINK) $(belkinunv_OBJECTS) $(belkinunv_LDADD) $(LIBS)
bestfcom$(EXEEXT): $(bestfcom_OBJECTS) $(bestfcom_DEPENDENCIES) $(EXTRA_bestfcom_DEPENDENCIES) 
	@rm -f bestfcom$(EXEEXT)
	$(LINK) $(bestfcom_OBJECTS) $(bestfcom_LDADD) $(LIBS)
bestfortress$(EXEEXT): $(bestfortress_OBJECTS) $(bestfortress_DEPENDENCIES) $(EXTRA_bestfortress_DEPENDENCIES) 
	@rm -f bestfortress$(EXEEXT)
	$(LINK) $(bestfortress_OBJECTS) $(bestfortress_LDADD) $(LIBS)
bestuferrups$(EXEEXT): $(bestuferrups_OBJECTS) $(bestuferrups_DEPENDENCIES) $(EXTRA_bestuferrups_DEPENDENCIES) 
	@rm -f bestuferrups$(EXEEXT)
	$(LINK) $(bestuferrups_OBJECTS) $(bestuferrups_LDADD) $(LIBS)
bestups$(EXEEXT): $(bestups_OBJECTS) $(bestups_DEPENDENCIES) $(EXTRA_bestups_DEPENDENCIES) 
	@rm -f bestups$(EXEEXT)
	$(LINK) $(bestups_OBJECTS) $(bestups_LDADD) $(LIBS)
blazer_ser$(EXEEXT): $(blazer_ser_OBJECTS) $(blazer_ser_DEPENDENCIES) $(EXTRA_blazer_ser_DEPENDENCIES) 
	@rm -f blazer_ser$(EXEEXT)
	$(LINK) $(blazer_ser_OBJECTS) $(blazer_ser_LDADD) $(LIBS)
blazer_usb$(EXEEXT): $(blazer_usb_OBJECTS) $(blazer_usb_DEPENDENCIES) $(EXTRA_blazer_usb_DEPENDENCIES) 
	@rm -f blazer_usb$(EXEEXT)
	$(LINK) $(blazer_usb_OBJECTS) $(blazer_usb_LDADD) $(LIBS)
clone$(EXEEXT): $(clone_OBJECTS) $(clone_DEPENDENCIES) $(EXTRA_clone_DEPENDENCIES) 
	@rm -f clone$(EXEEXT)
	$(LINK) $(clone_OBJECTS) $(clone_LDADD) $(LIBS)
clone-outlet$(EXEEXT): $(clone_outlet_OBJECTS) $(clone_outlet_DEPENDENCIES) $(EXTRA_clone_outlet_DEPENDENCIES) 
	@rm -f clone-outlet$(EXEEXT)
	$(LINK) $(clone_outlet_OBJECTS) $(clone_outlet_LDADD) $(LIBS)
dummy-ups$(EXEEXT): $(dummy_ups_OBJECTS) $(dummy_ups_DEPENDENCIES) $(EXTRA_dummy_ups_DEPENDENCIES) 
	@rm -f dummy-ups$(EXEEXT)
	$(dummy_ups_LINK) $(dummy_ups_OBJECTS) $(dummy_ups_LDADD) $(LIBS)
etapro$(EXEEXT): $(etapro_OBJECTS) $(etapro_DEPENDENCIES) $(EXTRA_etapro_DEPENDENCIES) 
	@rm -f etapro$(EXEEXT)
	$(LINK) $(etapro_OBJECTS) $(etapro_LDADD) $(LIBS)
everups$(EXEEXT): $(everups_OBJECTS) $(everups_DEPENDENCIES) $(EXTRA_everups_DEPENDENCIES) 
	@rm -f everups$(EXEEXT)
	$(LINK) $(everups_OBJECTS) $(everups_LDADD) $(LIBS)
gamatronic$(EXEEXT): $(gamatronic_OBJECTS) $(gamatronic_DEPENDENCIES) $(EXTRA_gamatronic_DEPENDENCIES) 
	@rm -f gamatronic$(EXEEXT)
	$(LINK) $(gamatronic_OBJECTS) $(gamatronic_LDADD) $(LIBS)
genericups$(EXEEXT): $(genericups_OBJECTS) $(genericups_DEPENDENCIES) $(EXTRA_genericups_DEPENDENCIES) 
	@rm -f genericups$(EXEEXT)
	$(LINK) $(genericups_OBJECTS) $(genericups_LDADD) $(LIBS)
isbmex$(EXEEXT): $(isbmex_OBJECTS) $(isbmex_DEPENDENCIES) $(EXTRA_isbmex_DEPENDENCIES) 
	@rm -f isbmex$(EXEEXT)
	$(LINK) $(isbmex_OBJECTS) $(isbmex_LDADD) $(LIBS)
ivtscd$(EXEEXT): $(ivtscd_OBJECTS) $(ivtscd_DEPENDENCIES) $(EXTRA_ivtscd_DEPENDENCIES) 
	@rm -f ivtscd$(EXEEXT)
	$(LINK) $(ivtscd_OBJECTS) $(ivtscd_LDADD) $(LIBS)
liebert$(EXEEXT): $(liebert_OBJECTS) $(liebert_DEPENDENCIES) $(EXTRA_liebert_DEPENDENCIES) 
	@rm -f liebert$(EXEEXT)
	$(LINK) $(liebert_OBJECTS) $(liebert_LDADD) $(LIBS)
liebert-esp2$(EXEEXT): $(liebert_esp2_OBJECTS) $(liebert_esp2_DEPENDENCIES) $(EXTRA_liebert_esp2_DEPENDENCIES) 
	@rm -f liebert-esp2$(EXEEXT)
	$(LINK) $(liebert_esp2_OBJECTS) $(liebert_esp2_LDADD) $(LIBS)
macosx-ups$(EXEEXT): $(macosx_ups_OBJECTS) $(macosx_ups_DEPENDENCIES) $(EXTRA_macosx_ups_DEPENDENCIES) 
	@rm -f macosx-ups$(EXEEXT)
	$(macosx_ups_LINK) $(macosx_ups_OBJECTS) $(macosx_ups_LDADD) $(LIBS)
masterguard$(EXEEXT): $(masterguard_OBJECTS) $(masterguard_DEPENDENCIES) $(EXTRA_masterguard_DEPENDENCIES) 
	@rm -f masterguard$(EXEEXT)
	$(LINK) $(masterguard_OBJECTS) $(masterguard_LDADD) $(LIBS)
metasys$(EXEEXT): $(metasys_OBJECTS) $(metasys_DEPENDENCIES) $(EXTRA_metasys_DEPENDENCIES) 
	@rm -f metasys$(EXEEXT)
	$(LINK) $(metasys_OBJECTS) $(metasys_LDADD) $(LIBS)
mge-shut$(EXEEXT): $(mge_shut_OBJECTS) $(mge_shut_DEPENDENCIES) $(EXTRA_mge_shut_DEPENDENCIES) 
	@rm -f mge-shut$(EXEEXT)
	$(mge_shut_LINK) $(mge_shut_OBJECTS) $(mge_shut_LDADD) $(LIBS)
mge-utalk$(EXEEXT): $(mge_utalk_OBJECTS) $(mge_utalk_DEPENDENCIES) $(EXTRA_mge_utalk_DEPENDENCIES) 
	@rm -f mge-utalk$(EXEEXT)
	$(LINK) $(mge_utalk_OBJECTS) $(mge_utalk_LDADD) $(LIBS)
microdowell$(EXEEXT): $(microdowell_OBJECTS) $(microdowell_DEPENDENCIES) $(EXTRA_microdowell_DEPENDENCIES) 
	@rm -f microdowell$(EXEEXT)
	$(LINK) $(microdowell_OBJECTS) $(microdowell_LDADD) $(LIBS)
netxml-ups$(EXEEXT): $(netxml_ups_OBJECTS) $(netxml_ups_DEPENDENCIES) $(EXTRA_netxml_ups_DEPENDENCIES) 
	@rm -f netxml-ups$(EXEEXT)
	$(LINK) $(netxml_ups_OBJECTS) $(netxml_ups_LDADD) $(LIBS)
nut-ipmipsu$(EXEEXT): $(nut_ipmipsu_OBJECTS) $(nut_ipmipsu_DEPENDENCIES) $(EXTRA_nut_ipmipsu_DEPENDENCIES) 
	@rm -f nut-ipmipsu$(EXEEXT)
	$(LINK) $(nut_ipmipsu_OBJECTS) $(nut_ipmipsu_LDADD) $(LIBS)
nutdrv_atcl_usb$(EXEEXT): $(nutdrv_atcl_usb_OBJECTS) $(nutdrv_atcl_usb_DEPENDENCIES) $(EXTRA_nutdrv_atcl_usb_DEPENDENCIES) 
	@rm -f nutdrv_atcl_usb$(EXEEXT)
	$(LINK) $(nutdrv_atcl_usb_OBJECTS) $(nutdrv_atcl_usb_LDADD) $(LIBS)
nutdrv_qx$(EXEEXT): $(nutdrv_qx_OBJECTS) $(nutdrv_qx_DEPENDENCIES) $(EXTRA_nutdrv_qx_DEPENDENCIES) 
	@rm -f nutdrv_qx$(EXEEXT)
	$(nutdrv_qx_LINK) $(nutdrv_qx_OBJECTS) $(nutdrv_qx_LDADD) $(LIBS)
oldmge-shut$(EXEEXT): $(oldmge_shut_OBJECTS) $(oldmge_shut_DEPENDENCIES) $(EXTRA_oldmge_shut_DEPENDENCIES) 
	@rm -f oldmge-shut$(EXEEXT)
	$(LINK) $(oldmge_shut_OBJECTS) $(oldmge_shut_LDADD) $(LIBS)
omron_usb$(EXEEXT): $(omron_usb_OBJECTS) $(omron_usb_DEPENDENCIES) $(EXTRA_omron_usb_DEPENDENCIES) 
	@rm -f omron_usb$(EXEEXT)
	$(LINK) $(omron_usb_OBJECTS) $(omron_usb_LDADD) $(LIBS)
oneac$(EXEEXT): $(oneac_OBJECTS) $(oneac_DEPENDENCIES) $(EXTRA_oneac_DEPENDENCIES) 
	@rm -f oneac$(EXEEXT)
	$(LINK) $(oneac_OBJECTS) $(oneac_LDADD) $(LIBS)
optiups$(EXEEXT): $(optiups_OBJECTS) $(optiups_DEPENDENCIES) $(EXTRA_optiups_DEPENDENCIES) 
	@rm -f optiups$(EXEEXT)
	$(LINK) $(optiups_OBJECTS) $(optiups_LDADD) $(LIBS)
powercom$(EXEEXT): $(powercom_OBJECTS) $(powercom_DEPENDENCIES) $(EXTRA_powercom_DEPENDENCIES) 
	@rm -f powercom$(EXEEXT)
	$(LINK) $(powercom_OBJECTS) $(powercom_LDADD) $(LIBS)
powerman-pdu$(EXEEXT): $(powerman_pdu_OBJECTS) $(powerman_pdu_DEPENDENCIES) $(EXTRA_powerman_pdu_DEPENDENCIES) 
	@rm -f powerman-pdu$(EXEEXT)
	$(LINK) $(powerman_pdu_OBJECTS) $(powerman_pdu_LDADD) $(LIBS)
powerpanel$(EXEEXT): $(powerpanel_OBJECTS) $(powerpanel_DEPENDENCIES) $(EXTRA_powerpanel_DEPENDENCIES) 
	@rm -f powerpanel$(EXEEXT)
	$(LINK) $(powerpanel_OBJECTS) $(powerpanel_LDADD) $(LIBS)
rhino$(EXEEXT): $(rhino_OBJECTS) $(rhino_DEPENDENCIES) $(EXTRA_rhino_DEPENDENCIES) 
	@rm -f rhino$(EXEEXT)
	$(LINK) $(rhino_OBJECTS) $(rhino_LDADD) $(LIBS)
richcomm_usb$(EXEEXT): $(richcomm_usb_OBJECTS) $(richcomm_usb_DEPENDENCIES) $(EXTRA_richcomm_usb_DEPENDENCIES) 
	@rm -f richcomm_usb$(EXEEXT)
	$(LINK) $(richcomm_usb_OBJECTS) $(richcomm_usb_LDADD) $(LIBS)
riello_ser$(EXEEXT): $(riello_ser_OBJECTS) $(riello_ser_DEPENDENCIES) $(EXTRA_riello_ser_DEPENDENCIES) 
	@rm -f riello_ser$(EXEEXT)
	$(LINK) $(riello_ser_OBJECTS) $(riello_ser_LDADD) $(LIBS)
riello_usb$(EXEEXT): $(riello_usb_OBJECTS) $(riello_usb_DEPENDENCIES) $(EXTRA_riello_usb_DEPENDENCIES) 
	@rm -f riello_usb$(EXEEXT)
	$(LINK) $(riello_usb_OBJECTS) $(riello_usb_LDADD) $(LIBS)
safenet$(EXEEXT): $(safenet_OBJECTS) $(safenet_DEPENDENCIES) $(EXTRA_safenet_DEPENDENCIES) 
	@rm -f safenet$(EXEEXT)
	$(LINK) $(safenet_OBJECTS) $(safenet_LDADD) $(LIBS)
skel$(EXEEXT): $(skel_OBJECTS) $(skel_DEPENDENCIES) $(EXTRA_skel_DEPENDENCIES) 
	@rm -f skel$(EXEEXT)
	$(LINK) $(skel_OBJECTS) $(skel_LDADD) $(LIBS)
snmp-ups$(EXEEXT): $(snmp_ups_OBJECTS) $(snmp_ups_DEPENDENCIES) $(EXTRA_snmp_ups_DEPENDENCIES) 
	@rm -f snmp-ups$(EXEEXT)
	$(LINK) $(snmp_ups_OBJECTS) $(snmp_ups_LDADD) $(LIBS)
solis$(EXEEXT): $(solis_OBJECTS) $(solis_DEPENDENCIES) $(EXTRA_solis_DEPENDENCIES) 
	@rm -f solis$(EXEEXT)
	$(LINK) $(solis_OBJECTS) $(solis_LDADD) $(LIBS)
tripplite$(EXEEXT): $(tripplite_OBJECTS) $(tripplite_DEPENDENCIES) $(EXTRA_tripplite_DEPENDENCIES) 
	@rm -f tripplite$(EXEEXT)
	$(LINK) $(tripplite_OBJECTS) $(tripplite_LDADD) $(LIBS)
tripplite_usb$(EXEEXT): $(tripplite_usb_OBJECTS) $(tripplite_usb_DEPENDENCIES) $(EXTRA_tripplite_usb_DEPENDENCIES) 
	@rm -f tripplite_usb$(EXEEXT)
	$(LINK) $(tripplite_usb_OBJECTS) $(tripplite_usb_LDADD) $(LIBS)
tripplitesu$(EXEEXT): $(tripplitesu_OBJECTS) $(tripplitesu_DEPENDENCIES) $(EXTRA_tripplitesu_DEPENDENCIES) 
	@rm -f tripplitesu$(EXEEXT)
	$(LINK) $(tripplitesu_OBJECTS) $(tripplitesu_LDADD) $(LIBS)
upscode2$(EXEEXT): $(upscode2_OBJECTS) $(upscode2_DEPENDENCIES) $(EXTRA_upscode2_DEPENDENCIES) 
	@rm -f upscode2$(EXEEXT)
	$(LINK) $(upscode2_OBJECTS) $(upscode2_LDADD) $(LIBS)
upsdrvctl$(EXEEXT): $(upsdrvctl_OBJECTS) $(upsdrvctl_DEPENDENCIES) $(EXTRA_upsdrvctl_DEPENDENCIES) 
	@rm -f upsdrvctl$(EXEEXT)
	$(LINK) $(upsdrvctl_OBJECTS) $(upsdrvctl_LDADD) $(LIBS)
usbhid-ups$(EXEEXT): $(usbhid_ups_OBJECTS) $(usbhid_ups_DEPENDENCIES) $(EXTRA_usbhid_ups_DEPENDENCIES) 
	@rm -f usbhid-ups$(EXEEXT)
	$(LINK) $(usbhid_ups_OBJECTS) $(usbhid_ups_LDADD) $(LIBS)
victronups$(EXEEXT): $(victronups_OBJECTS) $(victronups_DEPENDENCIES) $(EXTRA_victronups_DEPENDENCIES) 
	@rm -f victronups$(EXEEXT)
	$(LINK) $(victronups_OBJECTS) $(victronups_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/al175.Po
include ./$(DEPDIR)/apc-hid.Po
include ./$(DEPDIR)/apc-mib.Po
include ./$(DEPDIR)/apcsmart-old.Po
include ./$(DEPDIR)/apcsmart.Po
include ./$(DEPDIR)/apcsmart_tabs.Po
include ./$(DEPDIR)/apcupsd_ups-apcupsd-ups.Po
include ./$(DEPDIR)/baytech-mib.Po
include ./$(DEPDIR)/bcmxcp.Po
include ./$(DEPDIR)/bcmxcp_ser.Po
include ./$(DEPDIR)/bcmxcp_usb.Po
include ./$(DEPDIR)/belkin-hid.Po
include ./$(DEPDIR)/belkin.Po
include ./$(DEPDIR)/belkinunv.Po
include ./$(DEPDIR)/bestfcom.Po
include ./$(DEPDIR)/bestfortress.Po
include ./$(DEPDIR)/bestpower-mib.Po
include ./$(DEPDIR)/bestuferrups.Po
include ./$(DEPDIR)/bestups.Po
include ./$(DEPDIR)/blazer.Po
include ./$(DEPDIR)/blazer_ser.Po
include ./$(DEPDIR)/blazer_usb.Po
include ./$(DEPDIR)/clone-outlet.Po
include ./$(DEPDIR)/clone.Po
include ./$(DEPDIR)/compaq-mib.Po
include ./$(DEPDIR)/cps-hid.Po
include ./$(DEPDIR)/cyberpower-mib.Po
include ./$(DEPDIR)/delta_ups-mib.Po
include ./$(DEPDIR)/dstate.Po
include ./$(DEPDIR)/dummy_ups-dummy-ups.Po
include ./$(DEPDIR)/eaton-mib.Po
include ./$(DEPDIR)/etapro.Po
include ./$(DEPDIR)/everups.Po
include ./$(DEPDIR)/explore-hid.Po
include ./$(DEPDIR)/fuji-hid.Po
include ./$(DEPDIR)/gamatronic.Po
include ./$(DEPDIR)/genericups.Po
include ./$(DEPDIR)/hidparser.Po
include ./$(DEPDIR)/idowell-hid.Po
include ./$(DEPDIR)/ietf-mib.Po
include ./$(DEPDIR)/isbmex.Po
include ./$(DEPDIR)/ivtscd.Po
include ./$(DEPDIR)/libhid.Po
include ./$(DEPDIR)/libusb.Po
include ./$(DEPDIR)/liebert-esp2.Po
include ./$(DEPDIR)/liebert-hid.Po
include ./$(DEPDIR)/liebert.Po
include ./$(DEPDIR)/macosx-ups.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/masterguard.Po
include ./$(DEPDIR)/metasys.Po
include ./$(DEPDIR)/mge-hid.Po
include ./$(DEPDIR)/mge-mib.Po
include ./$(DEPDIR)/mge-shut.Po
include ./$(DEPDIR)/mge-utalk.Po
include ./$(DEPDIR)/mge-xml.Po
include ./$(DEPDIR)/mge_shut-hidparser.Po
include ./$(DEPDIR)/mge_shut-libhid.Po
include ./$(DEPDIR)/mge_shut-libshut.Po
include ./$(DEPDIR)/mge_shut-mge-hid.Po
include ./$(DEPDIR)/mge_shut-usbhid-ups.Po
include ./$(DEPDIR)/microdowell.Po
include ./$(DEPDIR)/netvision-mib.Po
include ./$(DEPDIR)/netxml-ups.Po
include ./$(DEPDIR)/nut-ipmipsu.Po
include ./$(DEPDIR)/nut-libfreeipmi.Po
include ./$(DEPDIR)/nutdrv_atcl_usb.Po
include ./$(DEPDIR)/nutdrv_qx-libusb.Po
include ./$(DEPDIR)/nutdrv_qx-nutdrv_qx.Po
include ./$(DEPDIR)/nutdrv_qx-nutdrv_qx_blazer-common.Po
include ./$(DEPDIR)/nutdrv_qx-nutdrv_qx_mecer.Po
include ./$(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec-old.Po
include ./$(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec.Po
include ./$(DEPDIR)/nutdrv_qx-nutdrv_qx_mustek.Po
include ./$(DEPDIR)/nutdrv_qx-nutdrv_qx_q1.Po
include ./$(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic-qs.Po
include ./$(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic.Po
include ./$(DEPDIR)/nutdrv_qx-nutdrv_qx_zinto.Po
include ./$(DEPDIR)/nutdrv_qx-usb-common.Po
include ./$(DEPDIR)/omron.Po
include ./$(DEPDIR)/omron_usb.Po
include ./$(DEPDIR)/oneac.Po
include ./$(DEPDIR)/openups-hid.Po
include ./$(DEPDIR)/optiups.Po
include ./$(DEPDIR)/powercom-hid.Po
include ./$(DEPDIR)/powercom.Po
include ./$(DEPDIR)/powerman-pdu.Po
include ./$(DEPDIR)/powerp-bin.Po
include ./$(DEPDIR)/powerp-txt.Po
include ./$(DEPDIR)/powerpanel.Po
include ./$(DEPDIR)/powerware-mib.Po
include ./$(DEPDIR)/raritan-pdu-mib.Po
include ./$(DEPDIR)/rhino.Po
include ./$(DEPDIR)/richcomm_usb.Po
include ./$(DEPDIR)/riello.Po
include ./$(DEPDIR)/riello_ser.Po
include ./$(DEPDIR)/riello_usb.Po
include ./$(DEPDIR)/safenet.Po
include ./$(DEPDIR)/serial.Po
include ./$(DEPDIR)/skel.Po
include ./$(DEPDIR)/snmp-ups.Po
include ./$(DEPDIR)/solis.Po
include ./$(DEPDIR)/tripplite-hid.Po
include ./$(DEPDIR)/tripplite.Po
include ./$(DEPDIR)/tripplite_usb.Po
include ./$(DEPDIR)/tripplitesu.Po
include ./$(DEPDIR)/upscode2.Po
include ./$(DEPDIR)/upsdrvctl.Po
include ./$(DEPDIR)/usb-common.Po
include ./$(DEPDIR)/usbhid-ups.Po
include ./$(DEPDIR)/victronups.Po
include ./$(DEPDIR)/xppc-mib.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

apcupsd_ups-apcupsd-ups.o: apcupsd-ups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apcupsd_ups_CFLAGS) $(CFLAGS) -MT apcupsd_ups-apcupsd-ups.o -MD -MP -MF $(DEPDIR)/apcupsd_ups-apcupsd-ups.Tpo -c -o apcupsd_ups-apcupsd-ups.o `test -f 'apcupsd-ups.c' || echo '$(srcdir)/'`apcupsd-ups.c
	$(am__mv) $(DEPDIR)/apcupsd_ups-apcupsd-ups.Tpo $(DEPDIR)/apcupsd_ups-apcupsd-ups.Po
#	source='apcupsd-ups.c' object='apcupsd_ups-apcupsd-ups.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apcupsd_ups_CFLAGS) $(CFLAGS) -c -o apcupsd_ups-apcupsd-ups.o `test -f 'apcupsd-ups.c' || echo '$(srcdir)/'`apcupsd-ups.c

apcupsd_ups-apcupsd-ups.obj: apcupsd-ups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apcupsd_ups_CFLAGS) $(CFLAGS) -MT apcupsd_ups-apcupsd-ups.obj -MD -MP -MF $(DEPDIR)/apcupsd_ups-apcupsd-ups.Tpo -c -o apcupsd_ups-apcupsd-ups.obj `if test -f 'apcupsd-ups.c'; then $(CYGPATH_W) 'apcupsd-ups.c'; else $(CYGPATH_W) '$(srcdir)/apcupsd-ups.c'; fi`
	$(am__mv) $(DEPDIR)/apcupsd_ups-apcupsd-ups.Tpo $(DEPDIR)/apcupsd_ups-apcupsd-ups.Po
#	source='apcupsd-ups.c' object='apcupsd_ups-apcupsd-ups.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apcupsd_ups_CFLAGS) $(CFLAGS) -c -o apcupsd_ups-apcupsd-ups.obj `if test -f 'apcupsd-ups.c'; then $(CYGPATH_W) 'apcupsd-ups.c'; else $(CYGPATH_W) '$(srcdir)/apcupsd-ups.c'; fi`

dummy_ups-dummy-ups.o: dummy-ups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dummy_ups_CFLAGS) $(CFLAGS) -MT dummy_ups-dummy-ups.o -MD -MP -MF $(DEPDIR)/dummy_ups-dummy-ups.Tpo -c -o dummy_ups-dummy-ups.o `test -f 'dummy-ups.c' || echo '$(srcdir)/'`dummy-ups.c
	$(am__mv) $(DEPDIR)/dummy_ups-dummy-ups.Tpo $(DEPDIR)/dummy_ups-dummy-ups.Po
#	source='dummy-ups.c' object='dummy_ups-dummy-ups.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dummy_ups_CFLAGS) $(CFLAGS) -c -o dummy_ups-dummy-ups.o `test -f 'dummy-ups.c' || echo '$(srcdir)/'`dummy-ups.c

dummy_ups-dummy-ups.obj: dummy-ups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dummy_ups_CFLAGS) $(CFLAGS) -MT dummy_ups-dummy-ups.obj -MD -MP -MF $(DEPDIR)/dummy_ups-dummy-ups.Tpo -c -o dummy_ups-dummy-ups.obj `if test -f 'dummy-ups.c'; then $(CYGPATH_W) 'dummy-ups.c'; else $(CYGPATH_W) '$(srcdir)/dummy-ups.c'; fi`
	$(am__mv) $(DEPDIR)/dummy_ups-dummy-ups.Tpo $(DEPDIR)/dummy_ups-dummy-ups.Po
#	source='dummy-ups.c' object='dummy_ups-dummy-ups.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dummy_ups_CFLAGS) $(CFLAGS) -c -o dummy_ups-dummy-ups.obj `if test -f 'dummy-ups.c'; then $(CYGPATH_W) 'dummy-ups.c'; else $(CYGPATH_W) '$(srcdir)/dummy-ups.c'; fi`

mge_shut-usbhid-ups.o: usbhid-ups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -MT mge_shut-usbhid-ups.o -MD -MP -MF $(DEPDIR)/mge_shut-usbhid-ups.Tpo -c -o mge_shut-usbhid-ups.o `test -f 'usbhid-ups.c' || echo '$(srcdir)/'`usbhid-ups.c
	$(am__mv) $(DEPDIR)/mge_shut-usbhid-ups.Tpo $(DEPDIR)/mge_shut-usbhid-ups.Po
#	source='usbhid-ups.c' object='mge_shut-usbhid-ups.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -c -o mge_shut-usbhid-ups.o `test -f 'usbhid-ups.c' || echo '$(srcdir)/'`usbhid-ups.c

mge_shut-usbhid-ups.obj: usbhid-ups.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -MT mge_shut-usbhid-ups.obj -MD -MP -MF $(DEPDIR)/mge_shut-usbhid-ups.Tpo -c -o mge_shut-usbhid-ups.obj `if test -f 'usbhid-ups.c'; then $(CYGPATH_W) 'usbhid-ups.c'; else $(CYGPATH_W) '$(srcdir)/usbhid-ups.c'; fi`
	$(am__mv) $(DEPDIR)/mge_shut-usbhid-ups.Tpo $(DEPDIR)/mge_shut-usbhid-ups.Po
#	source='usbhid-ups.c' object='mge_shut-usbhid-ups.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -c -o mge_shut-usbhid-ups.obj `if test -f 'usbhid-ups.c'; then $(CYGPATH_W) 'usbhid-ups.c'; else $(CYGPATH_W) '$(srcdir)/usbhid-ups.c'; fi`

mge_shut-libshut.o: libshut.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -MT mge_shut-libshut.o -MD -MP -MF $(DEPDIR)/mge_shut-libshut.Tpo -c -o mge_shut-libshut.o `test -f 'libshut.c' || echo '$(srcdir)/'`libshut.c
	$(am__mv) $(DEPDIR)/mge_shut-libshut.Tpo $(DEPDIR)/mge_shut-libshut.Po
#	source='libshut.c' object='mge_shut-libshut.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -c -o mge_shut-libshut.o `test -f 'libshut.c' || echo '$(srcdir)/'`libshut.c

mge_shut-libshut.obj: libshut.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -MT mge_shut-libshut.obj -MD -MP -MF $(DEPDIR)/mge_shut-libshut.Tpo -c -o mge_shut-libshut.obj `if test -f 'libshut.c'; then $(CYGPATH_W) 'libshut.c'; else $(CYGPATH_W) '$(srcdir)/libshut.c'; fi`
	$(am__mv) $(DEPDIR)/mge_shut-libshut.Tpo $(DEPDIR)/mge_shut-libshut.Po
#	source='libshut.c' object='mge_shut-libshut.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -c -o mge_shut-libshut.obj `if test -f 'libshut.c'; then $(CYGPATH_W) 'libshut.c'; else $(CYGPATH_W) '$(srcdir)/libshut.c'; fi`

mge_shut-libhid.o: libhid.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -MT mge_shut-libhid.o -MD -MP -MF $(DEPDIR)/mge_shut-libhid.Tpo -c -o mge_shut-libhid.o `test -f 'libhid.c' || echo '$(srcdir)/'`libhid.c
	$(am__mv) $(DEPDIR)/mge_shut-libhid.Tpo $(DEPDIR)/mge_shut-libhid.Po
#	source='libhid.c' object='mge_shut-libhid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -c -o mge_shut-libhid.o `test -f 'libhid.c' || echo '$(srcdir)/'`libhid.c

mge_shut-libhid.obj: libhid.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -MT mge_shut-libhid.obj -MD -MP -MF $(DEPDIR)/mge_shut-libhid.Tpo -c -o mge_shut-libhid.obj `if test -f 'libhid.c'; then $(CYGPATH_W) 'libhid.c'; else $(CYGPATH_W) '$(srcdir)/libhid.c'; fi`
	$(am__mv) $(DEPDIR)/mge_shut-libhid.Tpo $(DEPDIR)/mge_shut-libhid.Po
#	source='libhid.c' object='mge_shut-libhid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -c -o mge_shut-libhid.obj `if test -f 'libhid.c'; then $(CYGPATH_W) 'libhid.c'; else $(CYGPATH_W) '$(srcdir)/libhid.c'; fi`

mge_shut-hidparser.o: hidparser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -MT mge_shut-hidparser.o -MD -MP -MF $(DEPDIR)/mge_shut-hidparser.Tpo -c -o mge_shut-hidparser.o `test -f 'hidparser.c' || echo '$(srcdir)/'`hidparser.c
	$(am__mv) $(DEPDIR)/mge_shut-hidparser.Tpo $(DEPDIR)/mge_shut-hidparser.Po
#	source='hidparser.c' object='mge_shut-hidparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -c -o mge_shut-hidparser.o `test -f 'hidparser.c' || echo '$(srcdir)/'`hidparser.c

mge_shut-hidparser.obj: hidparser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -MT mge_shut-hidparser.obj -MD -MP -MF $(DEPDIR)/mge_shut-hidparser.Tpo -c -o mge_shut-hidparser.obj `if test -f 'hidparser.c'; then $(CYGPATH_W) 'hidparser.c'; else $(CYGPATH_W) '$(srcdir)/hidparser.c'; fi`
	$(am__mv) $(DEPDIR)/mge_shut-hidparser.Tpo $(DEPDIR)/mge_shut-hidparser.Po
#	source='hidparser.c' object='mge_shut-hidparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -c -o mge_shut-hidparser.obj `if test -f 'hidparser.c'; then $(CYGPATH_W) 'hidparser.c'; else $(CYGPATH_W) '$(srcdir)/hidparser.c'; fi`

mge_shut-mge-hid.o: mge-hid.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -MT mge_shut-mge-hid.o -MD -MP -MF $(DEPDIR)/mge_shut-mge-hid.Tpo -c -o mge_shut-mge-hid.o `test -f 'mge-hid.c' || echo '$(srcdir)/'`mge-hid.c
	$(am__mv) $(DEPDIR)/mge_shut-mge-hid.Tpo $(DEPDIR)/mge_shut-mge-hid.Po
#	source='mge-hid.c' object='mge_shut-mge-hid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -c -o mge_shut-mge-hid.o `test -f 'mge-hid.c' || echo '$(srcdir)/'`mge-hid.c

mge_shut-mge-hid.obj: mge-hid.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -MT mge_shut-mge-hid.obj -MD -MP -MF $(DEPDIR)/mge_shut-mge-hid.Tpo -c -o mge_shut-mge-hid.obj `if test -f 'mge-hid.c'; then $(CYGPATH_W) 'mge-hid.c'; else $(CYGPATH_W) '$(srcdir)/mge-hid.c'; fi`
	$(am__mv) $(DEPDIR)/mge_shut-mge-hid.Tpo $(DEPDIR)/mge_shut-mge-hid.Po
#	source='mge-hid.c' object='mge_shut-mge-hid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mge_shut_CFLAGS) $(CFLAGS) -c -o mge_shut-mge-hid.obj `if test -f 'mge-hid.c'; then $(CYGPATH_W) 'mge-hid.c'; else $(CYGPATH_W) '$(srcdir)/mge-hid.c'; fi`

nutdrv_qx-nutdrv_qx.o: nutdrv_qx.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx.Tpo -c -o nutdrv_qx-nutdrv_qx.o `test -f 'nutdrv_qx.c' || echo '$(srcdir)/'`nutdrv_qx.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx.Po
#	source='nutdrv_qx.c' object='nutdrv_qx-nutdrv_qx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx.o `test -f 'nutdrv_qx.c' || echo '$(srcdir)/'`nutdrv_qx.c

nutdrv_qx-nutdrv_qx.obj: nutdrv_qx.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx.Tpo -c -o nutdrv_qx-nutdrv_qx.obj `if test -f 'nutdrv_qx.c'; then $(CYGPATH_W) 'nutdrv_qx.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx.Po
#	source='nutdrv_qx.c' object='nutdrv_qx-nutdrv_qx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx.obj `if test -f 'nutdrv_qx.c'; then $(CYGPATH_W) 'nutdrv_qx.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx.c'; fi`

nutdrv_qx-libusb.o: libusb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-libusb.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-libusb.Tpo -c -o nutdrv_qx-libusb.o `test -f 'libusb.c' || echo '$(srcdir)/'`libusb.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-libusb.Tpo $(DEPDIR)/nutdrv_qx-libusb.Po
#	source='libusb.c' object='nutdrv_qx-libusb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-libusb.o `test -f 'libusb.c' || echo '$(srcdir)/'`libusb.c

nutdrv_qx-libusb.obj: libusb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-libusb.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-libusb.Tpo -c -o nutdrv_qx-libusb.obj `if test -f 'libusb.c'; then $(CYGPATH_W) 'libusb.c'; else $(CYGPATH_W) '$(srcdir)/libusb.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-libusb.Tpo $(DEPDIR)/nutdrv_qx-libusb.Po
#	source='libusb.c' object='nutdrv_qx-libusb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-libusb.obj `if test -f 'libusb.c'; then $(CYGPATH_W) 'libusb.c'; else $(CYGPATH_W) '$(srcdir)/libusb.c'; fi`

nutdrv_qx-usb-common.o: usb-common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-usb-common.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-usb-common.Tpo -c -o nutdrv_qx-usb-common.o `test -f 'usb-common.c' || echo '$(srcdir)/'`usb-common.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-usb-common.Tpo $(DEPDIR)/nutdrv_qx-usb-common.Po
#	source='usb-common.c' object='nutdrv_qx-usb-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-usb-common.o `test -f 'usb-common.c' || echo '$(srcdir)/'`usb-common.c

nutdrv_qx-usb-common.obj: usb-common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-usb-common.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-usb-common.Tpo -c -o nutdrv_qx-usb-common.obj `if test -f 'usb-common.c'; then $(CYGPATH_W) 'usb-common.c'; else $(CYGPATH_W) '$(srcdir)/usb-common.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-usb-common.Tpo $(DEPDIR)/nutdrv_qx-usb-common.Po
#	source='usb-common.c' object='nutdrv_qx-usb-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-usb-common.obj `if test -f 'usb-common.c'; then $(CYGPATH_W) 'usb-common.c'; else $(CYGPATH_W) '$(srcdir)/usb-common.c'; fi`

nutdrv_qx-nutdrv_qx_blazer-common.o: nutdrv_qx_blazer-common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_blazer-common.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_blazer-common.Tpo -c -o nutdrv_qx-nutdrv_qx_blazer-common.o `test -f 'nutdrv_qx_blazer-common.c' || echo '$(srcdir)/'`nutdrv_qx_blazer-common.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_blazer-common.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_blazer-common.Po
#	source='nutdrv_qx_blazer-common.c' object='nutdrv_qx-nutdrv_qx_blazer-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_blazer-common.o `test -f 'nutdrv_qx_blazer-common.c' || echo '$(srcdir)/'`nutdrv_qx_blazer-common.c

nutdrv_qx-nutdrv_qx_blazer-common.obj: nutdrv_qx_blazer-common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_blazer-common.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_blazer-common.Tpo -c -o nutdrv_qx-nutdrv_qx_blazer-common.obj `if test -f 'nutdrv_qx_blazer-common.c'; then $(CYGPATH_W) 'nutdrv_qx_blazer-common.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_blazer-common.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_blazer-common.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_blazer-common.Po
#	source='nutdrv_qx_blazer-common.c' object='nutdrv_qx-nutdrv_qx_blazer-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_blazer-common.obj `if test -f 'nutdrv_qx_blazer-common.c'; then $(CYGPATH_W) 'nutdrv_qx_blazer-common.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_blazer-common.c'; fi`

nutdrv_qx-nutdrv_qx_mecer.o: nutdrv_qx_mecer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_mecer.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_mecer.Tpo -c -o nutdrv_qx-nutdrv_qx_mecer.o `test -f 'nutdrv_qx_mecer.c' || echo '$(srcdir)/'`nutdrv_qx_mecer.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_mecer.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_mecer.Po
#	source='nutdrv_qx_mecer.c' object='nutdrv_qx-nutdrv_qx_mecer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_mecer.o `test -f 'nutdrv_qx_mecer.c' || echo '$(srcdir)/'`nutdrv_qx_mecer.c

nutdrv_qx-nutdrv_qx_mecer.obj: nutdrv_qx_mecer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_mecer.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_mecer.Tpo -c -o nutdrv_qx-nutdrv_qx_mecer.obj `if test -f 'nutdrv_qx_mecer.c'; then $(CYGPATH_W) 'nutdrv_qx_mecer.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_mecer.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_mecer.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_mecer.Po
#	source='nutdrv_qx_mecer.c' object='nutdrv_qx-nutdrv_qx_mecer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_mecer.obj `if test -f 'nutdrv_qx_mecer.c'; then $(CYGPATH_W) 'nutdrv_qx_mecer.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_mecer.c'; fi`

nutdrv_qx-nutdrv_qx_megatec.o: nutdrv_qx_megatec.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_megatec.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec.Tpo -c -o nutdrv_qx-nutdrv_qx_megatec.o `test -f 'nutdrv_qx_megatec.c' || echo '$(srcdir)/'`nutdrv_qx_megatec.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec.Po
#	source='nutdrv_qx_megatec.c' object='nutdrv_qx-nutdrv_qx_megatec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_megatec.o `test -f 'nutdrv_qx_megatec.c' || echo '$(srcdir)/'`nutdrv_qx_megatec.c

nutdrv_qx-nutdrv_qx_megatec.obj: nutdrv_qx_megatec.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_megatec.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec.Tpo -c -o nutdrv_qx-nutdrv_qx_megatec.obj `if test -f 'nutdrv_qx_megatec.c'; then $(CYGPATH_W) 'nutdrv_qx_megatec.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_megatec.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec.Po
#	source='nutdrv_qx_megatec.c' object='nutdrv_qx-nutdrv_qx_megatec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_megatec.obj `if test -f 'nutdrv_qx_megatec.c'; then $(CYGPATH_W) 'nutdrv_qx_megatec.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_megatec.c'; fi`

nutdrv_qx-nutdrv_qx_megatec-old.o: nutdrv_qx_megatec-old.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_megatec-old.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec-old.Tpo -c -o nutdrv_qx-nutdrv_qx_megatec-old.o `test -f 'nutdrv_qx_megatec-old.c' || echo '$(srcdir)/'`nutdrv_qx_megatec-old.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec-old.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec-old.Po
#	source='nutdrv_qx_megatec-old.c' object='nutdrv_qx-nutdrv_qx_megatec-old.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_megatec-old.o `test -f 'nutdrv_qx_megatec-old.c' || echo '$(srcdir)/'`nutdrv_qx_megatec-old.c

nutdrv_qx-nutdrv_qx_megatec-old.obj: nutdrv_qx_megatec-old.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_megatec-old.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec-old.Tpo -c -o nutdrv_qx-nutdrv_qx_megatec-old.obj `if test -f 'nutdrv_qx_megatec-old.c'; then $(CYGPATH_W) 'nutdrv_qx_megatec-old.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_megatec-old.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec-old.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_megatec-old.Po
#	source='nutdrv_qx_megatec-old.c' object='nutdrv_qx-nutdrv_qx_megatec-old.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_megatec-old.obj `if test -f 'nutdrv_qx_megatec-old.c'; then $(CYGPATH_W) 'nutdrv_qx_megatec-old.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_megatec-old.c'; fi`

nutdrv_qx-nutdrv_qx_mustek.o: nutdrv_qx_mustek.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_mustek.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_mustek.Tpo -c -o nutdrv_qx-nutdrv_qx_mustek.o `test -f 'nutdrv_qx_mustek.c' || echo '$(srcdir)/'`nutdrv_qx_mustek.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_mustek.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_mustek.Po
#	source='nutdrv_qx_mustek.c' object='nutdrv_qx-nutdrv_qx_mustek.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_mustek.o `test -f 'nutdrv_qx_mustek.c' || echo '$(srcdir)/'`nutdrv_qx_mustek.c

nutdrv_qx-nutdrv_qx_mustek.obj: nutdrv_qx_mustek.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_mustek.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_mustek.Tpo -c -o nutdrv_qx-nutdrv_qx_mustek.obj `if test -f 'nutdrv_qx_mustek.c'; then $(CYGPATH_W) 'nutdrv_qx_mustek.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_mustek.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_mustek.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_mustek.Po
#	source='nutdrv_qx_mustek.c' object='nutdrv_qx-nutdrv_qx_mustek.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_mustek.obj `if test -f 'nutdrv_qx_mustek.c'; then $(CYGPATH_W) 'nutdrv_qx_mustek.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_mustek.c'; fi`

nutdrv_qx-nutdrv_qx_q1.o: nutdrv_qx_q1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_q1.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_q1.Tpo -c -o nutdrv_qx-nutdrv_qx_q1.o `test -f 'nutdrv_qx_q1.c' || echo '$(srcdir)/'`nutdrv_qx_q1.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_q1.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_q1.Po
#	source='nutdrv_qx_q1.c' object='nutdrv_qx-nutdrv_qx_q1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_q1.o `test -f 'nutdrv_qx_q1.c' || echo '$(srcdir)/'`nutdrv_qx_q1.c

nutdrv_qx-nutdrv_qx_q1.obj: nutdrv_qx_q1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_q1.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_q1.Tpo -c -o nutdrv_qx-nutdrv_qx_q1.obj `if test -f 'nutdrv_qx_q1.c'; then $(CYGPATH_W) 'nutdrv_qx_q1.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_q1.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_q1.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_q1.Po
#	source='nutdrv_qx_q1.c' object='nutdrv_qx-nutdrv_qx_q1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_q1.obj `if test -f 'nutdrv_qx_q1.c'; then $(CYGPATH_W) 'nutdrv_qx_q1.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_q1.c'; fi`

nutdrv_qx-nutdrv_qx_voltronic.o: nutdrv_qx_voltronic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_voltronic.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic.Tpo -c -o nutdrv_qx-nutdrv_qx_voltronic.o `test -f 'nutdrv_qx_voltronic.c' || echo '$(srcdir)/'`nutdrv_qx_voltronic.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic.Po
#	source='nutdrv_qx_voltronic.c' object='nutdrv_qx-nutdrv_qx_voltronic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_voltronic.o `test -f 'nutdrv_qx_voltronic.c' || echo '$(srcdir)/'`nutdrv_qx_voltronic.c

nutdrv_qx-nutdrv_qx_voltronic.obj: nutdrv_qx_voltronic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_voltronic.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic.Tpo -c -o nutdrv_qx-nutdrv_qx_voltronic.obj `if test -f 'nutdrv_qx_voltronic.c'; then $(CYGPATH_W) 'nutdrv_qx_voltronic.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_voltronic.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic.Po
#	source='nutdrv_qx_voltronic.c' object='nutdrv_qx-nutdrv_qx_voltronic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_voltronic.obj `if test -f 'nutdrv_qx_voltronic.c'; then $(CYGPATH_W) 'nutdrv_qx_voltronic.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_voltronic.c'; fi`

nutdrv_qx-nutdrv_qx_voltronic-qs.o: nutdrv_qx_voltronic-qs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_voltronic-qs.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic-qs.Tpo -c -o nutdrv_qx-nutdrv_qx_voltronic-qs.o `test -f 'nutdrv_qx_voltronic-qs.c' || echo '$(srcdir)/'`nutdrv_qx_voltronic-qs.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic-qs.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic-qs.Po
#	source='nutdrv_qx_voltronic-qs.c' object='nutdrv_qx-nutdrv_qx_voltronic-qs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_voltronic-qs.o `test -f 'nutdrv_qx_voltronic-qs.c' || echo '$(srcdir)/'`nutdrv_qx_voltronic-qs.c

nutdrv_qx-nutdrv_qx_voltronic-qs.obj: nutdrv_qx_voltronic-qs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_voltronic-qs.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic-qs.Tpo -c -o nutdrv_qx-nutdrv_qx_voltronic-qs.obj `if test -f 'nutdrv_qx_voltronic-qs.c'; then $(CYGPATH_W) 'nutdrv_qx_voltronic-qs.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_voltronic-qs.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic-qs.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_voltronic-qs.Po
#	source='nutdrv_qx_voltronic-qs.c' object='nutdrv_qx-nutdrv_qx_voltronic-qs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_voltronic-qs.obj `if test -f 'nutdrv_qx_voltronic-qs.c'; then $(CYGPATH_W) 'nutdrv_qx_voltronic-qs.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_voltronic-qs.c'; fi`

nutdrv_qx-nutdrv_qx_zinto.o: nutdrv_qx_zinto.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_zinto.o -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_zinto.Tpo -c -o nutdrv_qx-nutdrv_qx_zinto.o `test -f 'nutdrv_qx_zinto.c' || echo '$(srcdir)/'`nutdrv_qx_zinto.c
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_zinto.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_zinto.Po
#	source='nutdrv_qx_zinto.c' object='nutdrv_qx-nutdrv_qx_zinto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_zinto.o `test -f 'nutdrv_qx_zinto.c' || echo '$(srcdir)/'`nutdrv_qx_zinto.c

nutdrv_qx-nutdrv_qx_zinto.obj: nutdrv_qx_zinto.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -MT nutdrv_qx-nutdrv_qx_zinto.obj -MD -MP -MF $(DEPDIR)/nutdrv_qx-nutdrv_qx_zinto.Tpo -c -o nutdrv_qx-nutdrv_qx_zinto.obj `if test -f 'nutdrv_qx_zinto.c'; then $(CYGPATH_W) 'nutdrv_qx_zinto.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_zinto.c'; fi`
	$(am__mv) $(DEPDIR)/nutdrv_qx-nutdrv_qx_zinto.Tpo $(DEPDIR)/nutdrv_qx-nutdrv_qx_zinto.Po
#	source='nutdrv_qx_zinto.c' object='nutdrv_qx-nutdrv_qx_zinto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nutdrv_qx_CFLAGS) $(CFLAGS) -c -o nutdrv_qx-nutdrv_qx_zinto.obj `if test -f 'nutdrv_qx_zinto.c'; then $(CYGPATH_W) 'nutdrv_qx_zinto.c'; else $(CYGPATH_W) '$(srcdir)/nutdrv_qx_zinto.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(driverexecdir)" "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-driverexecPROGRAMS clean-generic clean-libtool \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-driverexecPROGRAMS install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-driverexecPROGRAMS uninstall-sbinPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-driverexecPROGRAMS clean-generic clean-libtool \
	clean-sbinPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-driverexecPROGRAMS \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-driverexecPROGRAMS \
	uninstall-sbinPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
