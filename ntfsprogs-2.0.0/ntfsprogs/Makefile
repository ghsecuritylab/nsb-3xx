# Makefile.in generated by automake 1.11.1 from Makefile.am.
# ntfsprogs/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/ntfsprogs
pkgincludedir = $(includedir)/ntfsprogs
pkglibdir = $(libdir)/ntfsprogs
pkglibexecdir = $(libexecdir)/ntfsprogs
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = 
target_triplet = arm-openwrt-linux-gnu
bin_PROGRAMS = ntfsfix$(EXEEXT) ntfsinfo$(EXEEXT) ntfscluster$(EXEEXT) \
	ntfsls$(EXEEXT) ntfscat$(EXEEXT) ntfscmp$(EXEEXT) \
	$(am__EXEEXT_2)
sbin_PROGRAMS = mkntfs$(EXEEXT) ntfslabel$(EXEEXT) \
	ntfsundelete$(EXEEXT) ntfsresize$(EXEEXT) ntfsclone$(EXEEXT) \
	ntfscp$(EXEEXT)
EXTRA_PROGRAMS = ntfsdump_logfile$(EXEEXT) ntfswipe$(EXEEXT) \
	ntfstruncate$(EXEEXT) ntfsmove$(EXEEXT) ntfsmftalloc$(EXEEXT) \
	ntfsck$(EXEEXT) $(am__EXEEXT_1)
#am__append_1 = ntfsmount
#am__append_2 = ntfsdecrypt
subdir = ntfsprogs
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/mkntfs.8.in $(srcdir)/ntfscat.8.in \
	$(srcdir)/ntfsclone.8.in $(srcdir)/ntfscluster.8.in \
	$(srcdir)/ntfscmp.8.in $(srcdir)/ntfscp.8.in \
	$(srcdir)/ntfsfix.8.in $(srcdir)/ntfsinfo.8.in \
	$(srcdir)/ntfslabel.8.in $(srcdir)/ntfsls.8.in \
	$(srcdir)/ntfsmount.8.in $(srcdir)/ntfsprogs.8.in \
	$(srcdir)/ntfsresize.8.in $(srcdir)/ntfsundelete.8.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = mkntfs.8 ntfscat.8 ntfsclone.8 ntfscluster.8 \
	ntfscmp.8 ntfscp.8 ntfsfix.8 ntfsinfo.8 ntfslabel.8 ntfsls.8 \
	ntfsmount.8 ntfsprogs.8 ntfsresize.8 ntfsundelete.8
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = ntfsdecrypt$(EXEEXT)
#am__EXEEXT_2 = ntfsmount$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(man8dir)"
PROGRAMS = $(bin_PROGRAMS) $(sbin_PROGRAMS)
am_mkntfs_OBJECTS = mkntfs-attrdef.$(OBJEXT) mkntfs-boot.$(OBJEXT) \
	mkntfs-sd.$(OBJEXT) mkntfs-mkntfs.$(OBJEXT) \
	mkntfs-utils.$(OBJEXT)
mkntfs_OBJECTS = $(am_mkntfs_OBJECTS)
am__DEPENDENCIES_1 =
mkntfs_DEPENDENCIES = $(AM_LIBS) $(am__DEPENDENCIES_1)
mkntfs_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(mkntfs_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ntfscat_OBJECTS = ntfscat.$(OBJEXT) utils.$(OBJEXT)
ntfscat_OBJECTS = $(am_ntfscat_OBJECTS)
ntfscat_DEPENDENCIES = $(AM_LIBS)
ntfscat_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfscat_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ntfsck_OBJECTS = ntfsck.$(OBJEXT) utils.$(OBJEXT)
ntfsck_OBJECTS = $(am_ntfsck_OBJECTS)
ntfsck_DEPENDENCIES = $(AM_LIBS)
ntfsck_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfsck_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ntfsclone_OBJECTS = ntfsclone.$(OBJEXT) utils.$(OBJEXT)
ntfsclone_OBJECTS = $(am_ntfsclone_OBJECTS)
ntfsclone_DEPENDENCIES = $(AM_LIBS)
ntfsclone_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfsclone_LDFLAGS) $(LDFLAGS) -o $@
am_ntfscluster_OBJECTS = ntfscluster.$(OBJEXT) cluster.$(OBJEXT) \
	utils.$(OBJEXT)
ntfscluster_OBJECTS = $(am_ntfscluster_OBJECTS)
ntfscluster_DEPENDENCIES = $(AM_LIBS)
ntfscluster_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfscluster_LDFLAGS) $(LDFLAGS) -o $@
am_ntfscmp_OBJECTS = ntfscmp.$(OBJEXT) utils.$(OBJEXT)
ntfscmp_OBJECTS = $(am_ntfscmp_OBJECTS)
ntfscmp_DEPENDENCIES = $(AM_LIBS)
ntfscmp_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfscmp_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ntfscp_OBJECTS = ntfscp.$(OBJEXT) utils.$(OBJEXT)
ntfscp_OBJECTS = $(am_ntfscp_OBJECTS)
ntfscp_DEPENDENCIES = $(AM_LIBS)
ntfscp_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfscp_LDFLAGS) \
	$(LDFLAGS) -o $@
am__ntfsdecrypt_SOURCES_DIST = ntfsdecrypt.c utils.c utils.h
#am_ntfsdecrypt_OBJECTS =  \
#	ntfsdecrypt-ntfsdecrypt.$(OBJEXT) \
#	ntfsdecrypt-utils.$(OBJEXT)
ntfsdecrypt_OBJECTS = $(am_ntfsdecrypt_OBJECTS)
#ntfsdecrypt_DEPENDENCIES = $(AM_LIBS)
ntfsdecrypt_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ntfsdecrypt_CFLAGS) \
	$(CFLAGS) $(ntfsdecrypt_LDFLAGS) $(LDFLAGS) -o $@
am_ntfsdump_logfile_OBJECTS = ntfsdump_logfile.$(OBJEXT)
ntfsdump_logfile_OBJECTS = $(am_ntfsdump_logfile_OBJECTS)
ntfsdump_logfile_DEPENDENCIES = $(AM_LIBS)
ntfsdump_logfile_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfsdump_logfile_LDFLAGS) $(LDFLAGS) -o $@
am_ntfsfix_OBJECTS = ntfsfix.$(OBJEXT) utils.$(OBJEXT)
ntfsfix_OBJECTS = $(am_ntfsfix_OBJECTS)
ntfsfix_DEPENDENCIES = $(AM_LIBS)
ntfsfix_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfsfix_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ntfsinfo_OBJECTS = ntfsinfo.$(OBJEXT) utils.$(OBJEXT)
ntfsinfo_OBJECTS = $(am_ntfsinfo_OBJECTS)
ntfsinfo_DEPENDENCIES = $(AM_LIBS)
ntfsinfo_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfsinfo_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ntfslabel_OBJECTS = ntfslabel.$(OBJEXT) utils.$(OBJEXT)
ntfslabel_OBJECTS = $(am_ntfslabel_OBJECTS)
ntfslabel_DEPENDENCIES = $(AM_LIBS)
ntfslabel_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfslabel_LDFLAGS) $(LDFLAGS) -o $@
am_ntfsls_OBJECTS = ntfsls.$(OBJEXT) utils.$(OBJEXT)
ntfsls_OBJECTS = $(am_ntfsls_OBJECTS)
ntfsls_DEPENDENCIES = $(AM_LIBS)
ntfsls_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfsls_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ntfsmftalloc_OBJECTS = ntfsmftalloc.$(OBJEXT) utils.$(OBJEXT)
ntfsmftalloc_OBJECTS = $(am_ntfsmftalloc_OBJECTS)
ntfsmftalloc_DEPENDENCIES = $(AM_LIBS)
ntfsmftalloc_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfsmftalloc_LDFLAGS) $(LDFLAGS) -o $@
am__ntfsmount_SOURCES_DIST = ntfsmount.c utils.c utils.h
#am_ntfsmount_OBJECTS =  \
#	ntfsmount-ntfsmount.$(OBJEXT) \
#	ntfsmount-utils.$(OBJEXT)
ntfsmount_OBJECTS = $(am_ntfsmount_OBJECTS)
#ntfsmount_DEPENDENCIES = $(AM_LIBS) \
#	$(am__DEPENDENCIES_1)
ntfsmount_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ntfsmount_CFLAGS) \
	$(CFLAGS) $(ntfsmount_LDFLAGS) $(LDFLAGS) -o $@
am_ntfsmove_OBJECTS = ntfsmove.$(OBJEXT) utils.$(OBJEXT)
ntfsmove_OBJECTS = $(am_ntfsmove_OBJECTS)
ntfsmove_DEPENDENCIES = $(AM_LIBS)
ntfsmove_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfsmove_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ntfsresize_OBJECTS = ntfsresize.$(OBJEXT) utils.$(OBJEXT)
ntfsresize_OBJECTS = $(am_ntfsresize_OBJECTS)
ntfsresize_DEPENDENCIES = $(AM_LIBS)
ntfsresize_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfsresize_LDFLAGS) $(LDFLAGS) -o $@
am_ntfstruncate_OBJECTS = attrdef.$(OBJEXT) ntfstruncate.$(OBJEXT) \
	utils.$(OBJEXT)
ntfstruncate_OBJECTS = $(am_ntfstruncate_OBJECTS)
ntfstruncate_DEPENDENCIES = $(AM_LIBS)
ntfstruncate_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfstruncate_LDFLAGS) $(LDFLAGS) -o $@
am_ntfsundelete_OBJECTS = ntfsundelete.$(OBJEXT) utils.$(OBJEXT)
ntfsundelete_OBJECTS = $(am_ntfsundelete_OBJECTS)
ntfsundelete_DEPENDENCIES = $(AM_LIBS)
ntfsundelete_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfsundelete_LDFLAGS) $(LDFLAGS) -o $@
am_ntfswipe_OBJECTS = ntfswipe.$(OBJEXT) utils.$(OBJEXT)
ntfswipe_OBJECTS = $(am_ntfswipe_OBJECTS)
ntfswipe_DEPENDENCIES = $(AM_LIBS)
ntfswipe_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfswipe_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
SOURCES = $(mkntfs_SOURCES) $(ntfscat_SOURCES) $(ntfsck_SOURCES) \
	$(ntfsclone_SOURCES) $(ntfscluster_SOURCES) $(ntfscmp_SOURCES) \
	$(ntfscp_SOURCES) $(ntfsdecrypt_SOURCES) \
	$(ntfsdump_logfile_SOURCES) $(ntfsfix_SOURCES) \
	$(ntfsinfo_SOURCES) $(ntfslabel_SOURCES) $(ntfsls_SOURCES) \
	$(ntfsmftalloc_SOURCES) $(ntfsmount_SOURCES) \
	$(ntfsmove_SOURCES) $(ntfsresize_SOURCES) \
	$(ntfstruncate_SOURCES) $(ntfsundelete_SOURCES) \
	$(ntfswipe_SOURCES)
DIST_SOURCES = $(mkntfs_SOURCES) $(ntfscat_SOURCES) $(ntfsck_SOURCES) \
	$(ntfsclone_SOURCES) $(ntfscluster_SOURCES) $(ntfscmp_SOURCES) \
	$(ntfscp_SOURCES) $(am__ntfsdecrypt_SOURCES_DIST) \
	$(ntfsdump_logfile_SOURCES) $(ntfsfix_SOURCES) \
	$(ntfsinfo_SOURCES) $(ntfslabel_SOURCES) $(ntfsls_SOURCES) \
	$(ntfsmftalloc_SOURCES) $(am__ntfsmount_SOURCES_DIST) \
	$(ntfsmove_SOURCES) $(ntfsresize_SOURCES) \
	$(ntfstruncate_SOURCES) $(ntfsundelete_SOURCES) \
	$(ntfswipe_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
man8dir = $(mandir)/man8
NROFF = nroff
MANS = $(man_MANS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run tar
AR = arm-openwrt-linux-uclibcgnueabi-ar
AUTOCONF = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run autoconf
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run automake-1.11
AWK = gawk
CC = arm-openwrt-linux-uclibcgnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O -pipe -march=armv7-a -mtune=cortex-a9 -funit-at-a-time -mfpu=neon -ftree-vectorize -mfloat-abi=softfp -fhonour-copts  -Wall
CPP = arm-openwrt-linux-uclibcgnueabi-gcc -E
CPPFLAGS = -I/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/include -I/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/include -I/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/usr/include -I/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/include 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FUSE_CFLAGS = 
FUSE_LIBS = 
GNUTLS_CFLAGS = 
GNUTLS_LIBS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = arm-openwrt-linux-uclibcgnueabi-ld
LDFLAGS = -L/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/lib -L/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/lib -L/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/usr/lib -L/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/lib 
LIBGCRYPT_CFLAGS = 
LIBGCRYPT_CONFIG = 
LIBGCRYPT_LIBS = 
LIBNTFS_CFLAGS = 
LIBNTFS_GNOMEVFS_CFLAGS = 
LIBNTFS_GNOMEVFS_LIBS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTVERSION_LIBNTFS = 10:0:0
MAINT = #
MAKEINFO = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MKNTFS_CPPFLAGS = 
MKNTFS_LIBS =  -luuid
NM = arm-openwrt-linux-uclibcgnueabi-nm
NMEDIT = 
OBJDUMP = arm-openwrt-linux-uclibcgnueabi-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ntfsprogs
PACKAGE_BUGREPORT = linux-ntfs-dev@lists.sourceforge.net
PACKAGE_NAME = ntfsprogs
PACKAGE_STRING = ntfsprogs 2.0.0
PACKAGE_TARNAME = ntfsprogs
PACKAGE_URL = 
PACKAGE_VERSION = 2.0.0
PATH_SEPARATOR = :
PKG_CONFIG = /home/igarashi/cortina/staging_dir/host/bin/pkg-config
PKG_CONFIG_LIBDIR = /home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/lib/pkgconfig
PKG_CONFIG_PATH = /home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/lib/pkgconfig:/usr/lib/pkgconfig:/opt/gnome/lib/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig:/opt/gnome/share/pkgconfig:/usr/local/share/pkgconfig
RANLIB = arm-openwrt-linux-uclibcgnueabi-ranlib
RM = /bin/rm
SED = /home/igarashi/cortina/staging_dir/host/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = arm-openwrt-linux-uclibcgnueabi-strip
VERSION = 2.0.0
abs_builddir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/ntfsprogs
abs_srcdir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/ntfsprogs
abs_top_builddir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0
abs_top_srcdir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
all_includes =  
all_libraries =  
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = /usr/bin
build = i686-pc-linux-gnu
build_alias = i686-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = 
host_alias = arm-openwrt-linux
host_cpu = arm
host_os = linux-gnu
host_vendor = openwrt
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = /usr/info
install_sh = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/install-sh
libconfig_CFLAGS = 
libconfig_LIBS = 
libdir = ${exec_prefix}/lib
libexecdir = /usr/lib
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = /usr/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s&$$&&;s&^&&
psdir = ${docdir}
sbindir = /usr/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target = arm-openwrt-linux-gnu
target_alias = arm-openwrt-linux
target_cpu = arm
target_os = linux-gnu
target_vendor = openwrt
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_LIBS = $(top_builddir)/libntfs/libntfs.la
#AM_LIBS = $(top_builddir)/libntfs/.libs/libntfs.a
AM_LFLAGS = $(all_libraries)
#AM_LFLAGS = -static
#STATIC_LINK = $(CC) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
LIBTOOL_LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@

# Workaround to make REALLYSTATIC work with automake 1.5.
LINK = $(STATIC_LINK) $(LIBTOOL_LINK)
man_MANS = mkntfs.8 ntfsfix.8 ntfslabel.8 ntfsinfo.8 \
			  ntfsundelete.8 ntfsresize.8 ntfsprogs.8 ntfsls.8 \
			  ntfsclone.8 ntfscluster.8 ntfscat.8 ntfscp.8 \
			  ntfsmount.8 ntfscmp.8

EXTRA_MANS = 
CLEANFILES = $(EXTRA_PROGRAMS)
MAINTAINERCLEANFILES = Makefile.in
linux_ntfsincludedir = -I$(top_srcdir)/include/ntfs

# Set the include path.
AM_CPPFLAGS = -I$(top_srcdir)/include/ntfs $(all_includes)
ntfsfix_SOURCES = ntfsfix.c utils.c utils.h
ntfsfix_LDADD = $(AM_LIBS)
ntfsfix_LDFLAGS = $(AM_LFLAGS)
mkntfs_CPPFLAGS = $(AM_CPPFLAGS) $(MKNTFS_CPPFLAGS)
mkntfs_SOURCES = attrdef.c attrdef.h boot.c boot.h sd.c sd.h mkntfs.c utils.c utils.h
mkntfs_LDADD = $(AM_LIBS) $(MKNTFS_LIBS)
mkntfs_LDFLAGS = $(AM_LFLAGS)
ntfslabel_SOURCES = ntfslabel.c utils.c utils.h
ntfslabel_LDADD = $(AM_LIBS)
ntfslabel_LDFLAGS = $(AM_LFLAGS)
ntfsinfo_SOURCES = ntfsinfo.c utils.c utils.h
ntfsinfo_LDADD = $(AM_LIBS)
ntfsinfo_LDFLAGS = $(AM_LFLAGS)
ntfsundelete_SOURCES = ntfsundelete.c ntfsundelete.h utils.c utils.h
ntfsundelete_LDADD = $(AM_LIBS)
ntfsundelete_LDFLAGS = $(AM_LFLAGS)
ntfsresize_SOURCES = ntfsresize.c utils.c utils.h
ntfsresize_LDADD = $(AM_LIBS)
ntfsresize_LDFLAGS = $(AM_LFLAGS)
ntfsclone_SOURCES = ntfsclone.c utils.c utils.h
ntfsclone_LDADD = $(AM_LIBS)
ntfsclone_LDFLAGS = $(AM_LFLAGS)
ntfscluster_SOURCES = ntfscluster.c ntfscluster.h cluster.c cluster.h utils.c utils.h
ntfscluster_LDADD = $(AM_LIBS)
ntfscluster_LDFLAGS = $(AM_LFLAGS)
ntfsls_SOURCES = ntfsls.c utils.c utils.h
ntfsls_LDADD = $(AM_LIBS)
ntfsls_LDFLAGS = $(AM_LFLAGS)
ntfscat_SOURCES = ntfscat.c ntfscat.h utils.c utils.h
ntfscat_LDADD = $(AM_LIBS)
ntfscat_LDFLAGS = $(AM_LFLAGS)
ntfscp_SOURCES = ntfscp.c utils.c utils.h
ntfscp_LDADD = $(AM_LIBS)
ntfscp_LDFLAGS = $(AM_LFLAGS)
ntfsck_SOURCES = ntfsck.c utils.c utils.h
ntfsck_LDADD = $(AM_LIBS)
ntfsck_LDFLAGS = $(AM_LFLAGS)
#ntfsmount_SOURCES = ntfsmount.c utils.c utils.h
#ntfsmount_LDADD = $(AM_LIBS) $(FUSE_LIBS)
#ntfsmount_LDFLAGS = $(AM_LFLAGS)
#ntfsmount_CFLAGS = $(FUSE_CFLAGS) -DFUSE_USE_VERSION=26
ntfscmp_SOURCES = ntfscmp.c utils.c utils.h
ntfscmp_LDADD = $(AM_LIBS)
ntfscmp_LDFLAGS = $(AM_LFLAGS)

# We don't distribute these
ntfstruncate_SOURCES = attrdef.c ntfstruncate.c utils.c utils.h
ntfstruncate_LDADD = $(AM_LIBS)
ntfstruncate_LDFLAGS = $(AM_LFLAGS)
ntfsmftalloc_SOURCES = ntfsmftalloc.c utils.c utils.h
ntfsmftalloc_LDADD = $(AM_LIBS)
ntfsmftalloc_LDFLAGS = $(AM_LFLAGS)
ntfsmove_SOURCES = ntfsmove.c ntfsmove.h utils.c utils.h
ntfsmove_LDADD = $(AM_LIBS)
ntfsmove_LDFLAGS = $(AM_LFLAGS)
ntfswipe_SOURCES = ntfswipe.c ntfswipe.h utils.c utils.h
ntfswipe_LDADD = $(AM_LIBS)
ntfswipe_LDFLAGS = $(AM_LFLAGS)
ntfsdump_logfile_SOURCES = ntfsdump_logfile.c
ntfsdump_logfile_LDADD = $(AM_LIBS)
ntfsdump_logfile_LDFLAGS = $(AM_LFLAGS)
#ntfsdecrypt_SOURCES = ntfsdecrypt.c utils.c utils.h
#ntfsdecrypt_LDADD = $(AM_LIBS)
#ntfsdecrypt_LDFLAGS = $(AM_LFLAGS) $(GNUTLS_LIBS)
#ntfsdecrypt_CFLAGS = $(GNUTLS_CFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu ntfsprogs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu ntfsprogs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
mkntfs.8: $(top_builddir)/config.status $(srcdir)/mkntfs.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfscat.8: $(top_builddir)/config.status $(srcdir)/ntfscat.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsclone.8: $(top_builddir)/config.status $(srcdir)/ntfsclone.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfscluster.8: $(top_builddir)/config.status $(srcdir)/ntfscluster.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfscmp.8: $(top_builddir)/config.status $(srcdir)/ntfscmp.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfscp.8: $(top_builddir)/config.status $(srcdir)/ntfscp.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsfix.8: $(top_builddir)/config.status $(srcdir)/ntfsfix.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsinfo.8: $(top_builddir)/config.status $(srcdir)/ntfsinfo.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfslabel.8: $(top_builddir)/config.status $(srcdir)/ntfslabel.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsls.8: $(top_builddir)/config.status $(srcdir)/ntfsls.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsmount.8: $(top_builddir)/config.status $(srcdir)/ntfsmount.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsprogs.8: $(top_builddir)/config.status $(srcdir)/ntfsprogs.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsresize.8: $(top_builddir)/config.status $(srcdir)/ntfsresize.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsundelete.8: $(top_builddir)/config.status $(srcdir)/ntfsundelete.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
mkntfs$(EXEEXT): $(mkntfs_OBJECTS) $(mkntfs_DEPENDENCIES) 
	@rm -f mkntfs$(EXEEXT)
	$(mkntfs_LINK) $(mkntfs_OBJECTS) $(mkntfs_LDADD) $(LIBS)
ntfscat$(EXEEXT): $(ntfscat_OBJECTS) $(ntfscat_DEPENDENCIES) 
	@rm -f ntfscat$(EXEEXT)
	$(ntfscat_LINK) $(ntfscat_OBJECTS) $(ntfscat_LDADD) $(LIBS)
ntfsck$(EXEEXT): $(ntfsck_OBJECTS) $(ntfsck_DEPENDENCIES) 
	@rm -f ntfsck$(EXEEXT)
	$(ntfsck_LINK) $(ntfsck_OBJECTS) $(ntfsck_LDADD) $(LIBS)
ntfsclone$(EXEEXT): $(ntfsclone_OBJECTS) $(ntfsclone_DEPENDENCIES) 
	@rm -f ntfsclone$(EXEEXT)
	$(ntfsclone_LINK) $(ntfsclone_OBJECTS) $(ntfsclone_LDADD) $(LIBS)
ntfscluster$(EXEEXT): $(ntfscluster_OBJECTS) $(ntfscluster_DEPENDENCIES) 
	@rm -f ntfscluster$(EXEEXT)
	$(ntfscluster_LINK) $(ntfscluster_OBJECTS) $(ntfscluster_LDADD) $(LIBS)
ntfscmp$(EXEEXT): $(ntfscmp_OBJECTS) $(ntfscmp_DEPENDENCIES) 
	@rm -f ntfscmp$(EXEEXT)
	$(ntfscmp_LINK) $(ntfscmp_OBJECTS) $(ntfscmp_LDADD) $(LIBS)
ntfscp$(EXEEXT): $(ntfscp_OBJECTS) $(ntfscp_DEPENDENCIES) 
	@rm -f ntfscp$(EXEEXT)
	$(ntfscp_LINK) $(ntfscp_OBJECTS) $(ntfscp_LDADD) $(LIBS)
ntfsdecrypt$(EXEEXT): $(ntfsdecrypt_OBJECTS) $(ntfsdecrypt_DEPENDENCIES) 
	@rm -f ntfsdecrypt$(EXEEXT)
	$(ntfsdecrypt_LINK) $(ntfsdecrypt_OBJECTS) $(ntfsdecrypt_LDADD) $(LIBS)
ntfsdump_logfile$(EXEEXT): $(ntfsdump_logfile_OBJECTS) $(ntfsdump_logfile_DEPENDENCIES) 
	@rm -f ntfsdump_logfile$(EXEEXT)
	$(ntfsdump_logfile_LINK) $(ntfsdump_logfile_OBJECTS) $(ntfsdump_logfile_LDADD) $(LIBS)
ntfsfix$(EXEEXT): $(ntfsfix_OBJECTS) $(ntfsfix_DEPENDENCIES) 
	@rm -f ntfsfix$(EXEEXT)
	$(ntfsfix_LINK) $(ntfsfix_OBJECTS) $(ntfsfix_LDADD) $(LIBS)
ntfsinfo$(EXEEXT): $(ntfsinfo_OBJECTS) $(ntfsinfo_DEPENDENCIES) 
	@rm -f ntfsinfo$(EXEEXT)
	$(ntfsinfo_LINK) $(ntfsinfo_OBJECTS) $(ntfsinfo_LDADD) $(LIBS)
ntfslabel$(EXEEXT): $(ntfslabel_OBJECTS) $(ntfslabel_DEPENDENCIES) 
	@rm -f ntfslabel$(EXEEXT)
	$(ntfslabel_LINK) $(ntfslabel_OBJECTS) $(ntfslabel_LDADD) $(LIBS)
ntfsls$(EXEEXT): $(ntfsls_OBJECTS) $(ntfsls_DEPENDENCIES) 
	@rm -f ntfsls$(EXEEXT)
	$(ntfsls_LINK) $(ntfsls_OBJECTS) $(ntfsls_LDADD) $(LIBS)
ntfsmftalloc$(EXEEXT): $(ntfsmftalloc_OBJECTS) $(ntfsmftalloc_DEPENDENCIES) 
	@rm -f ntfsmftalloc$(EXEEXT)
	$(ntfsmftalloc_LINK) $(ntfsmftalloc_OBJECTS) $(ntfsmftalloc_LDADD) $(LIBS)
ntfsmount$(EXEEXT): $(ntfsmount_OBJECTS) $(ntfsmount_DEPENDENCIES) 
	@rm -f ntfsmount$(EXEEXT)
	$(ntfsmount_LINK) $(ntfsmount_OBJECTS) $(ntfsmount_LDADD) $(LIBS)
ntfsmove$(EXEEXT): $(ntfsmove_OBJECTS) $(ntfsmove_DEPENDENCIES) 
	@rm -f ntfsmove$(EXEEXT)
	$(ntfsmove_LINK) $(ntfsmove_OBJECTS) $(ntfsmove_LDADD) $(LIBS)
ntfsresize$(EXEEXT): $(ntfsresize_OBJECTS) $(ntfsresize_DEPENDENCIES) 
	@rm -f ntfsresize$(EXEEXT)
	$(ntfsresize_LINK) $(ntfsresize_OBJECTS) $(ntfsresize_LDADD) $(LIBS)
ntfstruncate$(EXEEXT): $(ntfstruncate_OBJECTS) $(ntfstruncate_DEPENDENCIES) 
	@rm -f ntfstruncate$(EXEEXT)
	$(ntfstruncate_LINK) $(ntfstruncate_OBJECTS) $(ntfstruncate_LDADD) $(LIBS)
ntfsundelete$(EXEEXT): $(ntfsundelete_OBJECTS) $(ntfsundelete_DEPENDENCIES) 
	@rm -f ntfsundelete$(EXEEXT)
	$(ntfsundelete_LINK) $(ntfsundelete_OBJECTS) $(ntfsundelete_LDADD) $(LIBS)
ntfswipe$(EXEEXT): $(ntfswipe_OBJECTS) $(ntfswipe_DEPENDENCIES) 
	@rm -f ntfswipe$(EXEEXT)
	$(ntfswipe_LINK) $(ntfswipe_OBJECTS) $(ntfswipe_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/attrdef.Po
include ./$(DEPDIR)/cluster.Po
include ./$(DEPDIR)/mkntfs-attrdef.Po
include ./$(DEPDIR)/mkntfs-boot.Po
include ./$(DEPDIR)/mkntfs-mkntfs.Po
include ./$(DEPDIR)/mkntfs-sd.Po
include ./$(DEPDIR)/mkntfs-utils.Po
include ./$(DEPDIR)/ntfscat.Po
include ./$(DEPDIR)/ntfsck.Po
include ./$(DEPDIR)/ntfsclone.Po
include ./$(DEPDIR)/ntfscluster.Po
include ./$(DEPDIR)/ntfscmp.Po
include ./$(DEPDIR)/ntfscp.Po
include ./$(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Po
include ./$(DEPDIR)/ntfsdecrypt-utils.Po
include ./$(DEPDIR)/ntfsdump_logfile.Po
include ./$(DEPDIR)/ntfsfix.Po
include ./$(DEPDIR)/ntfsinfo.Po
include ./$(DEPDIR)/ntfslabel.Po
include ./$(DEPDIR)/ntfsls.Po
include ./$(DEPDIR)/ntfsmftalloc.Po
include ./$(DEPDIR)/ntfsmount-ntfsmount.Po
include ./$(DEPDIR)/ntfsmount-utils.Po
include ./$(DEPDIR)/ntfsmove.Po
include ./$(DEPDIR)/ntfsresize.Po
include ./$(DEPDIR)/ntfstruncate.Po
include ./$(DEPDIR)/ntfsundelete.Po
include ./$(DEPDIR)/ntfswipe.Po
include ./$(DEPDIR)/utils.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mkntfs-attrdef.o: attrdef.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-attrdef.o -MD -MP -MF $(DEPDIR)/mkntfs-attrdef.Tpo -c -o mkntfs-attrdef.o `test -f 'attrdef.c' || echo '$(srcdir)/'`attrdef.c
	$(am__mv) $(DEPDIR)/mkntfs-attrdef.Tpo $(DEPDIR)/mkntfs-attrdef.Po
#	source='attrdef.c' object='mkntfs-attrdef.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-attrdef.o `test -f 'attrdef.c' || echo '$(srcdir)/'`attrdef.c

mkntfs-attrdef.obj: attrdef.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-attrdef.obj -MD -MP -MF $(DEPDIR)/mkntfs-attrdef.Tpo -c -o mkntfs-attrdef.obj `if test -f 'attrdef.c'; then $(CYGPATH_W) 'attrdef.c'; else $(CYGPATH_W) '$(srcdir)/attrdef.c'; fi`
	$(am__mv) $(DEPDIR)/mkntfs-attrdef.Tpo $(DEPDIR)/mkntfs-attrdef.Po
#	source='attrdef.c' object='mkntfs-attrdef.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-attrdef.obj `if test -f 'attrdef.c'; then $(CYGPATH_W) 'attrdef.c'; else $(CYGPATH_W) '$(srcdir)/attrdef.c'; fi`

mkntfs-boot.o: boot.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-boot.o -MD -MP -MF $(DEPDIR)/mkntfs-boot.Tpo -c -o mkntfs-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c
	$(am__mv) $(DEPDIR)/mkntfs-boot.Tpo $(DEPDIR)/mkntfs-boot.Po
#	source='boot.c' object='mkntfs-boot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c

mkntfs-boot.obj: boot.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-boot.obj -MD -MP -MF $(DEPDIR)/mkntfs-boot.Tpo -c -o mkntfs-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`
	$(am__mv) $(DEPDIR)/mkntfs-boot.Tpo $(DEPDIR)/mkntfs-boot.Po
#	source='boot.c' object='mkntfs-boot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`

mkntfs-sd.o: sd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-sd.o -MD -MP -MF $(DEPDIR)/mkntfs-sd.Tpo -c -o mkntfs-sd.o `test -f 'sd.c' || echo '$(srcdir)/'`sd.c
	$(am__mv) $(DEPDIR)/mkntfs-sd.Tpo $(DEPDIR)/mkntfs-sd.Po
#	source='sd.c' object='mkntfs-sd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-sd.o `test -f 'sd.c' || echo '$(srcdir)/'`sd.c

mkntfs-sd.obj: sd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-sd.obj -MD -MP -MF $(DEPDIR)/mkntfs-sd.Tpo -c -o mkntfs-sd.obj `if test -f 'sd.c'; then $(CYGPATH_W) 'sd.c'; else $(CYGPATH_W) '$(srcdir)/sd.c'; fi`
	$(am__mv) $(DEPDIR)/mkntfs-sd.Tpo $(DEPDIR)/mkntfs-sd.Po
#	source='sd.c' object='mkntfs-sd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-sd.obj `if test -f 'sd.c'; then $(CYGPATH_W) 'sd.c'; else $(CYGPATH_W) '$(srcdir)/sd.c'; fi`

mkntfs-mkntfs.o: mkntfs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-mkntfs.o -MD -MP -MF $(DEPDIR)/mkntfs-mkntfs.Tpo -c -o mkntfs-mkntfs.o `test -f 'mkntfs.c' || echo '$(srcdir)/'`mkntfs.c
	$(am__mv) $(DEPDIR)/mkntfs-mkntfs.Tpo $(DEPDIR)/mkntfs-mkntfs.Po
#	source='mkntfs.c' object='mkntfs-mkntfs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-mkntfs.o `test -f 'mkntfs.c' || echo '$(srcdir)/'`mkntfs.c

mkntfs-mkntfs.obj: mkntfs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-mkntfs.obj -MD -MP -MF $(DEPDIR)/mkntfs-mkntfs.Tpo -c -o mkntfs-mkntfs.obj `if test -f 'mkntfs.c'; then $(CYGPATH_W) 'mkntfs.c'; else $(CYGPATH_W) '$(srcdir)/mkntfs.c'; fi`
	$(am__mv) $(DEPDIR)/mkntfs-mkntfs.Tpo $(DEPDIR)/mkntfs-mkntfs.Po
#	source='mkntfs.c' object='mkntfs-mkntfs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-mkntfs.obj `if test -f 'mkntfs.c'; then $(CYGPATH_W) 'mkntfs.c'; else $(CYGPATH_W) '$(srcdir)/mkntfs.c'; fi`

mkntfs-utils.o: utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-utils.o -MD -MP -MF $(DEPDIR)/mkntfs-utils.Tpo -c -o mkntfs-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	$(am__mv) $(DEPDIR)/mkntfs-utils.Tpo $(DEPDIR)/mkntfs-utils.Po
#	source='utils.c' object='mkntfs-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

mkntfs-utils.obj: utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-utils.obj -MD -MP -MF $(DEPDIR)/mkntfs-utils.Tpo -c -o mkntfs-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
	$(am__mv) $(DEPDIR)/mkntfs-utils.Tpo $(DEPDIR)/mkntfs-utils.Po
#	source='utils.c' object='mkntfs-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

ntfsdecrypt-ntfsdecrypt.o: ntfsdecrypt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-ntfsdecrypt.o -MD -MP -MF $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Tpo -c -o ntfsdecrypt-ntfsdecrypt.o `test -f 'ntfsdecrypt.c' || echo '$(srcdir)/'`ntfsdecrypt.c
	$(am__mv) $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Tpo $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Po
#	source='ntfsdecrypt.c' object='ntfsdecrypt-ntfsdecrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -c -o ntfsdecrypt-ntfsdecrypt.o `test -f 'ntfsdecrypt.c' || echo '$(srcdir)/'`ntfsdecrypt.c

ntfsdecrypt-ntfsdecrypt.obj: ntfsdecrypt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-ntfsdecrypt.obj -MD -MP -MF $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Tpo -c -o ntfsdecrypt-ntfsdecrypt.obj `if test -f 'ntfsdecrypt.c'; then $(CYGPATH_W) 'ntfsdecrypt.c'; else $(CYGPATH_W) '$(srcdir)/ntfsdecrypt.c'; fi`
	$(am__mv) $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Tpo $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Po
#	source='ntfsdecrypt.c' object='ntfsdecrypt-ntfsdecrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -c -o ntfsdecrypt-ntfsdecrypt.obj `if test -f 'ntfsdecrypt.c'; then $(CYGPATH_W) 'ntfsdecrypt.c'; else $(CYGPATH_W) '$(srcdir)/ntfsdecrypt.c'; fi`

ntfsdecrypt-utils.o: utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-utils.o -MD -MP -MF $(DEPDIR)/ntfsdecrypt-utils.Tpo -c -o ntfsdecrypt-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	$(am__mv) $(DEPDIR)/ntfsdecrypt-utils.Tpo $(DEPDIR)/ntfsdecrypt-utils.Po
#	source='utils.c' object='ntfsdecrypt-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -c -o ntfsdecrypt-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

ntfsdecrypt-utils.obj: utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-utils.obj -MD -MP -MF $(DEPDIR)/ntfsdecrypt-utils.Tpo -c -o ntfsdecrypt-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
	$(am__mv) $(DEPDIR)/ntfsdecrypt-utils.Tpo $(DEPDIR)/ntfsdecrypt-utils.Po
#	source='utils.c' object='ntfsdecrypt-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -c -o ntfsdecrypt-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

ntfsmount-ntfsmount.o: ntfsmount.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsmount_CFLAGS) $(CFLAGS) -MT ntfsmount-ntfsmount.o -MD -MP -MF $(DEPDIR)/ntfsmount-ntfsmount.Tpo -c -o ntfsmount-ntfsmount.o `test -f 'ntfsmount.c' || echo '$(srcdir)/'`ntfsmount.c
	$(am__mv) $(DEPDIR)/ntfsmount-ntfsmount.Tpo $(DEPDIR)/ntfsmount-ntfsmount.Po
#	source='ntfsmount.c' object='ntfsmount-ntfsmount.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsmount_CFLAGS) $(CFLAGS) -c -o ntfsmount-ntfsmount.o `test -f 'ntfsmount.c' || echo '$(srcdir)/'`ntfsmount.c

ntfsmount-ntfsmount.obj: ntfsmount.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsmount_CFLAGS) $(CFLAGS) -MT ntfsmount-ntfsmount.obj -MD -MP -MF $(DEPDIR)/ntfsmount-ntfsmount.Tpo -c -o ntfsmount-ntfsmount.obj `if test -f 'ntfsmount.c'; then $(CYGPATH_W) 'ntfsmount.c'; else $(CYGPATH_W) '$(srcdir)/ntfsmount.c'; fi`
	$(am__mv) $(DEPDIR)/ntfsmount-ntfsmount.Tpo $(DEPDIR)/ntfsmount-ntfsmount.Po
#	source='ntfsmount.c' object='ntfsmount-ntfsmount.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsmount_CFLAGS) $(CFLAGS) -c -o ntfsmount-ntfsmount.obj `if test -f 'ntfsmount.c'; then $(CYGPATH_W) 'ntfsmount.c'; else $(CYGPATH_W) '$(srcdir)/ntfsmount.c'; fi`

ntfsmount-utils.o: utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsmount_CFLAGS) $(CFLAGS) -MT ntfsmount-utils.o -MD -MP -MF $(DEPDIR)/ntfsmount-utils.Tpo -c -o ntfsmount-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	$(am__mv) $(DEPDIR)/ntfsmount-utils.Tpo $(DEPDIR)/ntfsmount-utils.Po
#	source='utils.c' object='ntfsmount-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsmount_CFLAGS) $(CFLAGS) -c -o ntfsmount-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

ntfsmount-utils.obj: utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsmount_CFLAGS) $(CFLAGS) -MT ntfsmount-utils.obj -MD -MP -MF $(DEPDIR)/ntfsmount-utils.Tpo -c -o ntfsmount-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
	$(am__mv) $(DEPDIR)/ntfsmount-utils.Tpo $(DEPDIR)/ntfsmount-utils.Po
#	source='utils.c' object='ntfsmount-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsmount_CFLAGS) $(CFLAGS) -c -o ntfsmount-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man8: $(man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man8dir)" || $(MKDIR_P) "$(DESTDIR)$(man8dir)"
	@list=''; test -n "$(man8dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.8[a-z]*$$/p'; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man8dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man8dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man8dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man8dir)" || exit $$?; }; \
	done; }

uninstall-man8:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man8dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.8[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man8dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man8dir)" && rm -f $$files; }

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(MANS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man8dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-sbinPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man8

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-local uninstall-man \
	uninstall-sbinPROGRAMS

uninstall-man: uninstall-man8

.MAKE: install-am install-data-am install-exec-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-sbinPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-data-hook install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-info install-info-am install-man \
	install-man8 install-pdf install-pdf-am install-ps \
	install-ps-am install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-local uninstall-man uninstall-man8 \
	uninstall-sbinPROGRAMS


# Extra targets

strip:	$(bin_PROGRAMS) $(sbin_PROGRAMS)
	$(STRIP) $^

libs:
	(cd ../libntfs && $(MAKE) libs) || exit 1;

extra:	extras

extras:	libs $(EXTRA_PROGRAMS)

# mkfs.ntfs[.8] and mount.ntfs-fuse hard links

install-exec-hook:
	$(INSTALL) -d $(DESTDIR)/sbin
	$(LN_S) -f $(sbindir)/mkntfs $(DESTDIR)/sbin/mkfs.ntfs
#	$(LN_S) -f $(bindir)/ntfsmount $(DESTDIR)/sbin/mount.ntfs-fuse
#	$(LN_S) -f $(bindir)/ntfsmount $(DESTDIR)/sbin/mount.fuse.ntfs

install-data-hook:
	$(INSTALL) -d $(DESTDIR)$(man8dir)
	$(LN_S) -f mkntfs.8 $(DESTDIR)$(man8dir)/mkfs.ntfs.8
#	$(LN_S) -f ntfsmount.8 $(DESTDIR)$(man8dir)/mount.ntfs-fuse.8
#	$(LN_S) -f ntfsmount.8 $(DESTDIR)$(man8dir)/mount.fuse.ntfs.8

uninstall-local:
	$(RM) -f $(DESTDIR)/sbin/mkfs.ntfs
	$(RM) -f $(DESTDIR)$(man8dir)/mkfs.ntfs.8
#	$(RM) -f $(DESTDIR)/sbin/mount.ntfs-fuse
#	$(RM) -f $(DESTDIR)/sbin/mount.fuse.ntfs
#	$(RM) -f $(DESTDIR)$(man8dir)/mount.ntfs-fuse.8
#	$(RM) -f $(DESTDIR)$(man8dir)/mount.fuse.ntfs.8

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
