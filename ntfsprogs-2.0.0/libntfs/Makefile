# Makefile.in generated by automake 1.11.1 from Makefile.am.
# libntfs/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Before making a release, the LTVERSION string should be modified.
# The string is of the form CURRENT:REVISION:AGE.
#
# CURRENT (C)
#	The most recent interface number that this library implements.
#
# REVISION (R)
#	The implementation number that this library implements.
#
# AGE (A)
#	The difference between the newest and oldest interfaces that this
#	library implements. In other works, the library implements all the
#	interface numbers in the range from number 'CURRENT - AGE' to
#	'CURRENT'.
#
# This means that:
#
#   - If interfaces have been changed or added, but binary compatibility has
#     been preserved, change to C+1:0:A+1
#
#   - If binary compatibility has been broken (eg removed or changed
#     interfaces) change to C+1:0:0
#
#   - If the interface is the same as the previous version, change to C:R+1:A
#



pkgdatadir = $(datadir)/ntfsprogs
pkgincludedir = $(includedir)/ntfsprogs
pkglibdir = $(libdir)/ntfsprogs
pkglibexecdir = $(libexecdir)/ntfsprogs
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = 
target_triplet = arm-openwrt-linux-gnu
#am__append_1 = $(GNUTLS_LIBS) $(libconfig_LIBS)
#am__append_2 = $(GNUTLS_CFLAGS) $(libconfig_CFLAGS)
subdir = libntfs
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/libntfs-gnomevfs.8.in $(srcdir)/libntfs.8.in \
	$(srcdir)/libntfs.conf.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libntfs.conf libntfs.8 libntfs-gnomevfs.8
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(gnomevfsmoduleslibdir)" \
	"$(DESTDIR)$(libdir)" "$(DESTDIR)$(man8dir)" \
	"$(DESTDIR)$(gnomevfsmodulesconfdir)"
LTLIBRARIES = $(gnomevfsmoduleslib_LTLIBRARIES) $(lib_LTLIBRARIES)
libntfs_gnomevfs_la_DEPENDENCIES = libntfs.la
am_libntfs_gnomevfs_la_OBJECTS =  \
	libntfs_gnomevfs_la-gnome-vfs-method.lo \
	libntfs_gnomevfs_la-gnome-vfs-module.lo
libntfs_gnomevfs_la_OBJECTS = $(am_libntfs_gnomevfs_la_OBJECTS)
libntfs_gnomevfs_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libntfs_gnomevfs_la_CFLAGS) $(CFLAGS) \
	$(libntfs_gnomevfs_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libntfs_gnomevfs_la_rpath = -rpath \
#	$(gnomevfsmoduleslibdir)
libntfs_la_LIBADD =
am_libntfs_la_OBJECTS = libntfs_la-attrib.lo libntfs_la-attrlist.lo \
	libntfs_la-bitmap.lo libntfs_la-bootsect.lo \
	libntfs_la-collate.lo libntfs_la-compat.lo \
	libntfs_la-compress.lo libntfs_la-crypto.lo \
	libntfs_la-debug.lo libntfs_la-device.lo \
	libntfs_la-device_io.lo libntfs_la-dir.lo libntfs_la-index.lo \
	libntfs_la-inode.lo libntfs_la-lcnalloc.lo \
	libntfs_la-logfile.lo libntfs_la-logging.lo libntfs_la-misc.lo \
	libntfs_la-mft.lo libntfs_la-mst.lo libntfs_la-runlist.lo \
	libntfs_la-security.lo libntfs_la-unistr.lo \
	libntfs_la-version.lo libntfs_la-volume.lo
libntfs_la_OBJECTS = $(am_libntfs_la_OBJECTS)
libntfs_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libntfs_la_CFLAGS) \
	$(CFLAGS) $(libntfs_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libntfs_gnomevfs_la_SOURCES) $(libntfs_la_SOURCES)
DIST_SOURCES = $(libntfs_gnomevfs_la_SOURCES) $(libntfs_la_SOURCES)
man8dir = $(mandir)/man8
NROFF = nroff
MANS = $(man_MANS)
DATA = $(gnomevfsmodulesconf_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run tar
AR = arm-openwrt-linux-uclibcgnueabi-ar
AUTOCONF = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run autoconf
AUTODIRS = 
AUTOHEADER = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run automake-1.11
AWK = gawk
CC = arm-openwrt-linux-uclibcgnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O -pipe -march=armv7-a -mtune=cortex-a9 -funit-at-a-time -mfpu=neon -ftree-vectorize -mfloat-abi=softfp -fhonour-copts  -Wall
CPP = arm-openwrt-linux-uclibcgnueabi-gcc -E
CPPFLAGS = -I/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/include -I/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/include -I/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/usr/include -I/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/include 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FUSE_CFLAGS = 
FUSE_LIBS = 
GNUTLS_CFLAGS = 
GNUTLS_LIBS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = arm-openwrt-linux-uclibcgnueabi-ld
LDFLAGS = -L/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/lib -L/home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/lib -L/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/usr/lib -L/home/igarashi/cortina/staging_dir/toolchain-arm_gcc-4.5.1+l_uClibc-0.9.32_eabi/lib 
LIBGCRYPT_CFLAGS = 
LIBGCRYPT_CONFIG = 
LIBGCRYPT_LIBS = 
LIBNTFS_CFLAGS = 
LIBNTFS_GNOMEVFS_CFLAGS = 
LIBNTFS_GNOMEVFS_LIBS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTVERSION_LIBNTFS = 10:0:0
MAINT = #
MAKEINFO = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MKNTFS_CPPFLAGS = 
MKNTFS_LIBS =  -luuid
NM = arm-openwrt-linux-uclibcgnueabi-nm
NMEDIT = 
OBJDUMP = arm-openwrt-linux-uclibcgnueabi-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ntfsprogs
PACKAGE_BUGREPORT = linux-ntfs-dev@lists.sourceforge.net
PACKAGE_NAME = ntfsprogs
PACKAGE_STRING = ntfsprogs 2.0.0
PACKAGE_TARNAME = ntfsprogs
PACKAGE_URL = 
PACKAGE_VERSION = 2.0.0
PATH_SEPARATOR = :
PKG_CONFIG = /home/igarashi/cortina/staging_dir/host/bin/pkg-config
PKG_CONFIG_LIBDIR = /home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/lib/pkgconfig
PKG_CONFIG_PATH = /home/igarashi/cortina/staging_dir/target-arm_uClibc-0.9.32_eabi/usr/lib/pkgconfig:/usr/lib/pkgconfig:/opt/gnome/lib/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig:/opt/gnome/share/pkgconfig:/usr/local/share/pkgconfig
RANLIB = arm-openwrt-linux-uclibcgnueabi-ranlib
RM = /bin/rm
SED = /home/igarashi/cortina/staging_dir/host/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = arm-openwrt-linux-uclibcgnueabi-strip
VERSION = 2.0.0
abs_builddir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/libntfs
abs_srcdir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/libntfs
abs_top_builddir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0
abs_top_srcdir = /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
all_includes =  
all_libraries =  
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = /usr/bin
build = i686-pc-linux-gnu
build_alias = i686-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = 
host_alias = arm-openwrt-linux
host_cpu = arm
host_os = linux-gnu
host_vendor = openwrt
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = /usr/info
install_sh = ${SHELL} /home/igarashi/cortina/build_dir/target-arm_uClibc-0.9.32_eabi/ntfsprogs-2.0.0/install-sh
libconfig_CFLAGS = 
libconfig_LIBS = 
libdir = ${exec_prefix}/lib
libexecdir = /usr/lib
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = /usr/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s&$$&&;s&^&&
psdir = ${docdir}
sbindir = /usr/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target = arm-openwrt-linux-gnu
target_alias = arm-openwrt-linux
target_cpu = arm
target_os = linux-gnu
target_vendor = openwrt
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# For LTVERSION_LIBNTFS see configure.ac!
LTVERSION_LIBNTFS_GNOMEVFS = 1:0:0
linux_ntfsincludedir = -I$(top_srcdir)/include/ntfs
lib_LTLIBRARIES = libntfs.la
libntfs_la_LDFLAGS = -version-info $(LTVERSION_LIBNTFS) -no-undefined \
	$(am__append_1)
libntfs_la_CFLAGS = $(LIBNTFS_CFLAGS) \
	-DLTVERSION_LIBNTFS=\"$(LTVERSION_LIBNTFS)\" $(am__append_2)
libntfs_la_SOURCES = \
	attrib.c	\
	attrlist.c	\
	bitmap.c	\
	bootsect.c	\
	collate.c	\
	compat.c	\
	compress.c	\
	crypto.c	\
	debug.c		\
	device.c	\
	device_io.c	\
	dir.c		\
	index.c		\
	inode.c		\
	lcnalloc.c	\
	logfile.c	\
	logging.c	\
	misc.c		\
	mft.c		\
	mst.c		\
	runlist.c	\
	security.c	\
	unistr.c	\
	version.c	\
	volume.c

#gnomevfsmoduleslibdir = $(libdir)/gnome-vfs-2.0/modules
#gnomevfsmoduleslib_LTLIBRARIES = libntfs-gnomevfs.la
#gnomevfsmodulesconfdir = $(sysconfdir)/gnome-vfs-2.0/modules
#gnomevfsmodulesconf_DATA = libntfs.conf
libntfs_gnomevfs_la_LDFLAGS = -version-info $(LTVERSION_LIBNTFS_GNOMEVFS)
libntfs_gnomevfs_la_LIBADD = libntfs.la
libntfs_gnomevfs_la_LIBS = $(LIBNTFS_GNOMEVFS_LIBS)
libntfs_gnomevfs_la_CFLAGS = $(LIBNTFS_GNOMEVFS_CFLAGS)
libntfs_gnomevfs_la_SOURCES = \
	gnome-vfs-method.c	\
	gnome-vfs-module.c

man_MANS = libntfs.8 \
	libntfs-gnomevfs.8

AM_CPPFLAGS = $(linux_ntfsincludedir) $(all_includes)
EXTRA_DIST = unix_io.c win32_io.c libntfs.conf.in config
MAINTAINERCLEANFILES = Makefile.in
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libntfs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libntfs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libntfs.conf: $(top_builddir)/config.status $(srcdir)/libntfs.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
libntfs.8: $(top_builddir)/config.status $(srcdir)/libntfs.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
libntfs-gnomevfs.8: $(top_builddir)/config.status $(srcdir)/libntfs-gnomevfs.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-gnomevfsmoduleslibLTLIBRARIES: $(gnomevfsmoduleslib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(gnomevfsmoduleslibdir)" || $(MKDIR_P) "$(DESTDIR)$(gnomevfsmoduleslibdir)"
	@list='$(gnomevfsmoduleslib_LTLIBRARIES)'; test -n "$(gnomevfsmoduleslibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(gnomevfsmoduleslibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(gnomevfsmoduleslibdir)"; \
	}

uninstall-gnomevfsmoduleslibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(gnomevfsmoduleslib_LTLIBRARIES)'; test -n "$(gnomevfsmoduleslibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(gnomevfsmoduleslibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(gnomevfsmoduleslibdir)/$$f"; \
	done

clean-gnomevfsmoduleslibLTLIBRARIES:
	-test -z "$(gnomevfsmoduleslib_LTLIBRARIES)" || rm -f $(gnomevfsmoduleslib_LTLIBRARIES)
	@list='$(gnomevfsmoduleslib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libntfs-gnomevfs.la: $(libntfs_gnomevfs_la_OBJECTS) $(libntfs_gnomevfs_la_DEPENDENCIES) 
	$(libntfs_gnomevfs_la_LINK) $(am_libntfs_gnomevfs_la_rpath) $(libntfs_gnomevfs_la_OBJECTS) $(libntfs_gnomevfs_la_LIBADD) $(LIBS)
libntfs.la: $(libntfs_la_OBJECTS) $(libntfs_la_DEPENDENCIES) 
	$(libntfs_la_LINK) -rpath $(libdir) $(libntfs_la_OBJECTS) $(libntfs_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libntfs_gnomevfs_la-gnome-vfs-method.Plo
include ./$(DEPDIR)/libntfs_gnomevfs_la-gnome-vfs-module.Plo
include ./$(DEPDIR)/libntfs_la-attrib.Plo
include ./$(DEPDIR)/libntfs_la-attrlist.Plo
include ./$(DEPDIR)/libntfs_la-bitmap.Plo
include ./$(DEPDIR)/libntfs_la-bootsect.Plo
include ./$(DEPDIR)/libntfs_la-collate.Plo
include ./$(DEPDIR)/libntfs_la-compat.Plo
include ./$(DEPDIR)/libntfs_la-compress.Plo
include ./$(DEPDIR)/libntfs_la-crypto.Plo
include ./$(DEPDIR)/libntfs_la-debug.Plo
include ./$(DEPDIR)/libntfs_la-device.Plo
include ./$(DEPDIR)/libntfs_la-device_io.Plo
include ./$(DEPDIR)/libntfs_la-dir.Plo
include ./$(DEPDIR)/libntfs_la-index.Plo
include ./$(DEPDIR)/libntfs_la-inode.Plo
include ./$(DEPDIR)/libntfs_la-lcnalloc.Plo
include ./$(DEPDIR)/libntfs_la-logfile.Plo
include ./$(DEPDIR)/libntfs_la-logging.Plo
include ./$(DEPDIR)/libntfs_la-mft.Plo
include ./$(DEPDIR)/libntfs_la-misc.Plo
include ./$(DEPDIR)/libntfs_la-mst.Plo
include ./$(DEPDIR)/libntfs_la-runlist.Plo
include ./$(DEPDIR)/libntfs_la-security.Plo
include ./$(DEPDIR)/libntfs_la-unistr.Plo
include ./$(DEPDIR)/libntfs_la-version.Plo
include ./$(DEPDIR)/libntfs_la-volume.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libntfs_gnomevfs_la-gnome-vfs-method.lo: gnome-vfs-method.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_gnomevfs_la_CFLAGS) $(CFLAGS) -MT libntfs_gnomevfs_la-gnome-vfs-method.lo -MD -MP -MF $(DEPDIR)/libntfs_gnomevfs_la-gnome-vfs-method.Tpo -c -o libntfs_gnomevfs_la-gnome-vfs-method.lo `test -f 'gnome-vfs-method.c' || echo '$(srcdir)/'`gnome-vfs-method.c
	$(am__mv) $(DEPDIR)/libntfs_gnomevfs_la-gnome-vfs-method.Tpo $(DEPDIR)/libntfs_gnomevfs_la-gnome-vfs-method.Plo
#	source='gnome-vfs-method.c' object='libntfs_gnomevfs_la-gnome-vfs-method.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_gnomevfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_gnomevfs_la-gnome-vfs-method.lo `test -f 'gnome-vfs-method.c' || echo '$(srcdir)/'`gnome-vfs-method.c

libntfs_gnomevfs_la-gnome-vfs-module.lo: gnome-vfs-module.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_gnomevfs_la_CFLAGS) $(CFLAGS) -MT libntfs_gnomevfs_la-gnome-vfs-module.lo -MD -MP -MF $(DEPDIR)/libntfs_gnomevfs_la-gnome-vfs-module.Tpo -c -o libntfs_gnomevfs_la-gnome-vfs-module.lo `test -f 'gnome-vfs-module.c' || echo '$(srcdir)/'`gnome-vfs-module.c
	$(am__mv) $(DEPDIR)/libntfs_gnomevfs_la-gnome-vfs-module.Tpo $(DEPDIR)/libntfs_gnomevfs_la-gnome-vfs-module.Plo
#	source='gnome-vfs-module.c' object='libntfs_gnomevfs_la-gnome-vfs-module.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_gnomevfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_gnomevfs_la-gnome-vfs-module.lo `test -f 'gnome-vfs-module.c' || echo '$(srcdir)/'`gnome-vfs-module.c

libntfs_la-attrib.lo: attrib.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-attrib.lo -MD -MP -MF $(DEPDIR)/libntfs_la-attrib.Tpo -c -o libntfs_la-attrib.lo `test -f 'attrib.c' || echo '$(srcdir)/'`attrib.c
	$(am__mv) $(DEPDIR)/libntfs_la-attrib.Tpo $(DEPDIR)/libntfs_la-attrib.Plo
#	source='attrib.c' object='libntfs_la-attrib.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-attrib.lo `test -f 'attrib.c' || echo '$(srcdir)/'`attrib.c

libntfs_la-attrlist.lo: attrlist.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-attrlist.lo -MD -MP -MF $(DEPDIR)/libntfs_la-attrlist.Tpo -c -o libntfs_la-attrlist.lo `test -f 'attrlist.c' || echo '$(srcdir)/'`attrlist.c
	$(am__mv) $(DEPDIR)/libntfs_la-attrlist.Tpo $(DEPDIR)/libntfs_la-attrlist.Plo
#	source='attrlist.c' object='libntfs_la-attrlist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-attrlist.lo `test -f 'attrlist.c' || echo '$(srcdir)/'`attrlist.c

libntfs_la-bitmap.lo: bitmap.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-bitmap.lo -MD -MP -MF $(DEPDIR)/libntfs_la-bitmap.Tpo -c -o libntfs_la-bitmap.lo `test -f 'bitmap.c' || echo '$(srcdir)/'`bitmap.c
	$(am__mv) $(DEPDIR)/libntfs_la-bitmap.Tpo $(DEPDIR)/libntfs_la-bitmap.Plo
#	source='bitmap.c' object='libntfs_la-bitmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-bitmap.lo `test -f 'bitmap.c' || echo '$(srcdir)/'`bitmap.c

libntfs_la-bootsect.lo: bootsect.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-bootsect.lo -MD -MP -MF $(DEPDIR)/libntfs_la-bootsect.Tpo -c -o libntfs_la-bootsect.lo `test -f 'bootsect.c' || echo '$(srcdir)/'`bootsect.c
	$(am__mv) $(DEPDIR)/libntfs_la-bootsect.Tpo $(DEPDIR)/libntfs_la-bootsect.Plo
#	source='bootsect.c' object='libntfs_la-bootsect.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-bootsect.lo `test -f 'bootsect.c' || echo '$(srcdir)/'`bootsect.c

libntfs_la-collate.lo: collate.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-collate.lo -MD -MP -MF $(DEPDIR)/libntfs_la-collate.Tpo -c -o libntfs_la-collate.lo `test -f 'collate.c' || echo '$(srcdir)/'`collate.c
	$(am__mv) $(DEPDIR)/libntfs_la-collate.Tpo $(DEPDIR)/libntfs_la-collate.Plo
#	source='collate.c' object='libntfs_la-collate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-collate.lo `test -f 'collate.c' || echo '$(srcdir)/'`collate.c

libntfs_la-compat.lo: compat.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-compat.lo -MD -MP -MF $(DEPDIR)/libntfs_la-compat.Tpo -c -o libntfs_la-compat.lo `test -f 'compat.c' || echo '$(srcdir)/'`compat.c
	$(am__mv) $(DEPDIR)/libntfs_la-compat.Tpo $(DEPDIR)/libntfs_la-compat.Plo
#	source='compat.c' object='libntfs_la-compat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-compat.lo `test -f 'compat.c' || echo '$(srcdir)/'`compat.c

libntfs_la-compress.lo: compress.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-compress.lo -MD -MP -MF $(DEPDIR)/libntfs_la-compress.Tpo -c -o libntfs_la-compress.lo `test -f 'compress.c' || echo '$(srcdir)/'`compress.c
	$(am__mv) $(DEPDIR)/libntfs_la-compress.Tpo $(DEPDIR)/libntfs_la-compress.Plo
#	source='compress.c' object='libntfs_la-compress.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-compress.lo `test -f 'compress.c' || echo '$(srcdir)/'`compress.c

libntfs_la-crypto.lo: crypto.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-crypto.lo -MD -MP -MF $(DEPDIR)/libntfs_la-crypto.Tpo -c -o libntfs_la-crypto.lo `test -f 'crypto.c' || echo '$(srcdir)/'`crypto.c
	$(am__mv) $(DEPDIR)/libntfs_la-crypto.Tpo $(DEPDIR)/libntfs_la-crypto.Plo
#	source='crypto.c' object='libntfs_la-crypto.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-crypto.lo `test -f 'crypto.c' || echo '$(srcdir)/'`crypto.c

libntfs_la-debug.lo: debug.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-debug.lo -MD -MP -MF $(DEPDIR)/libntfs_la-debug.Tpo -c -o libntfs_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c
	$(am__mv) $(DEPDIR)/libntfs_la-debug.Tpo $(DEPDIR)/libntfs_la-debug.Plo
#	source='debug.c' object='libntfs_la-debug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

libntfs_la-device.lo: device.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-device.lo -MD -MP -MF $(DEPDIR)/libntfs_la-device.Tpo -c -o libntfs_la-device.lo `test -f 'device.c' || echo '$(srcdir)/'`device.c
	$(am__mv) $(DEPDIR)/libntfs_la-device.Tpo $(DEPDIR)/libntfs_la-device.Plo
#	source='device.c' object='libntfs_la-device.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-device.lo `test -f 'device.c' || echo '$(srcdir)/'`device.c

libntfs_la-device_io.lo: device_io.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-device_io.lo -MD -MP -MF $(DEPDIR)/libntfs_la-device_io.Tpo -c -o libntfs_la-device_io.lo `test -f 'device_io.c' || echo '$(srcdir)/'`device_io.c
	$(am__mv) $(DEPDIR)/libntfs_la-device_io.Tpo $(DEPDIR)/libntfs_la-device_io.Plo
#	source='device_io.c' object='libntfs_la-device_io.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-device_io.lo `test -f 'device_io.c' || echo '$(srcdir)/'`device_io.c

libntfs_la-dir.lo: dir.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-dir.lo -MD -MP -MF $(DEPDIR)/libntfs_la-dir.Tpo -c -o libntfs_la-dir.lo `test -f 'dir.c' || echo '$(srcdir)/'`dir.c
	$(am__mv) $(DEPDIR)/libntfs_la-dir.Tpo $(DEPDIR)/libntfs_la-dir.Plo
#	source='dir.c' object='libntfs_la-dir.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-dir.lo `test -f 'dir.c' || echo '$(srcdir)/'`dir.c

libntfs_la-index.lo: index.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-index.lo -MD -MP -MF $(DEPDIR)/libntfs_la-index.Tpo -c -o libntfs_la-index.lo `test -f 'index.c' || echo '$(srcdir)/'`index.c
	$(am__mv) $(DEPDIR)/libntfs_la-index.Tpo $(DEPDIR)/libntfs_la-index.Plo
#	source='index.c' object='libntfs_la-index.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-index.lo `test -f 'index.c' || echo '$(srcdir)/'`index.c

libntfs_la-inode.lo: inode.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-inode.lo -MD -MP -MF $(DEPDIR)/libntfs_la-inode.Tpo -c -o libntfs_la-inode.lo `test -f 'inode.c' || echo '$(srcdir)/'`inode.c
	$(am__mv) $(DEPDIR)/libntfs_la-inode.Tpo $(DEPDIR)/libntfs_la-inode.Plo
#	source='inode.c' object='libntfs_la-inode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-inode.lo `test -f 'inode.c' || echo '$(srcdir)/'`inode.c

libntfs_la-lcnalloc.lo: lcnalloc.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-lcnalloc.lo -MD -MP -MF $(DEPDIR)/libntfs_la-lcnalloc.Tpo -c -o libntfs_la-lcnalloc.lo `test -f 'lcnalloc.c' || echo '$(srcdir)/'`lcnalloc.c
	$(am__mv) $(DEPDIR)/libntfs_la-lcnalloc.Tpo $(DEPDIR)/libntfs_la-lcnalloc.Plo
#	source='lcnalloc.c' object='libntfs_la-lcnalloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-lcnalloc.lo `test -f 'lcnalloc.c' || echo '$(srcdir)/'`lcnalloc.c

libntfs_la-logfile.lo: logfile.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-logfile.lo -MD -MP -MF $(DEPDIR)/libntfs_la-logfile.Tpo -c -o libntfs_la-logfile.lo `test -f 'logfile.c' || echo '$(srcdir)/'`logfile.c
	$(am__mv) $(DEPDIR)/libntfs_la-logfile.Tpo $(DEPDIR)/libntfs_la-logfile.Plo
#	source='logfile.c' object='libntfs_la-logfile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-logfile.lo `test -f 'logfile.c' || echo '$(srcdir)/'`logfile.c

libntfs_la-logging.lo: logging.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-logging.lo -MD -MP -MF $(DEPDIR)/libntfs_la-logging.Tpo -c -o libntfs_la-logging.lo `test -f 'logging.c' || echo '$(srcdir)/'`logging.c
	$(am__mv) $(DEPDIR)/libntfs_la-logging.Tpo $(DEPDIR)/libntfs_la-logging.Plo
#	source='logging.c' object='libntfs_la-logging.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-logging.lo `test -f 'logging.c' || echo '$(srcdir)/'`logging.c

libntfs_la-misc.lo: misc.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-misc.lo -MD -MP -MF $(DEPDIR)/libntfs_la-misc.Tpo -c -o libntfs_la-misc.lo `test -f 'misc.c' || echo '$(srcdir)/'`misc.c
	$(am__mv) $(DEPDIR)/libntfs_la-misc.Tpo $(DEPDIR)/libntfs_la-misc.Plo
#	source='misc.c' object='libntfs_la-misc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-misc.lo `test -f 'misc.c' || echo '$(srcdir)/'`misc.c

libntfs_la-mft.lo: mft.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-mft.lo -MD -MP -MF $(DEPDIR)/libntfs_la-mft.Tpo -c -o libntfs_la-mft.lo `test -f 'mft.c' || echo '$(srcdir)/'`mft.c
	$(am__mv) $(DEPDIR)/libntfs_la-mft.Tpo $(DEPDIR)/libntfs_la-mft.Plo
#	source='mft.c' object='libntfs_la-mft.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-mft.lo `test -f 'mft.c' || echo '$(srcdir)/'`mft.c

libntfs_la-mst.lo: mst.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-mst.lo -MD -MP -MF $(DEPDIR)/libntfs_la-mst.Tpo -c -o libntfs_la-mst.lo `test -f 'mst.c' || echo '$(srcdir)/'`mst.c
	$(am__mv) $(DEPDIR)/libntfs_la-mst.Tpo $(DEPDIR)/libntfs_la-mst.Plo
#	source='mst.c' object='libntfs_la-mst.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-mst.lo `test -f 'mst.c' || echo '$(srcdir)/'`mst.c

libntfs_la-runlist.lo: runlist.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-runlist.lo -MD -MP -MF $(DEPDIR)/libntfs_la-runlist.Tpo -c -o libntfs_la-runlist.lo `test -f 'runlist.c' || echo '$(srcdir)/'`runlist.c
	$(am__mv) $(DEPDIR)/libntfs_la-runlist.Tpo $(DEPDIR)/libntfs_la-runlist.Plo
#	source='runlist.c' object='libntfs_la-runlist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-runlist.lo `test -f 'runlist.c' || echo '$(srcdir)/'`runlist.c

libntfs_la-security.lo: security.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-security.lo -MD -MP -MF $(DEPDIR)/libntfs_la-security.Tpo -c -o libntfs_la-security.lo `test -f 'security.c' || echo '$(srcdir)/'`security.c
	$(am__mv) $(DEPDIR)/libntfs_la-security.Tpo $(DEPDIR)/libntfs_la-security.Plo
#	source='security.c' object='libntfs_la-security.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-security.lo `test -f 'security.c' || echo '$(srcdir)/'`security.c

libntfs_la-unistr.lo: unistr.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-unistr.lo -MD -MP -MF $(DEPDIR)/libntfs_la-unistr.Tpo -c -o libntfs_la-unistr.lo `test -f 'unistr.c' || echo '$(srcdir)/'`unistr.c
	$(am__mv) $(DEPDIR)/libntfs_la-unistr.Tpo $(DEPDIR)/libntfs_la-unistr.Plo
#	source='unistr.c' object='libntfs_la-unistr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-unistr.lo `test -f 'unistr.c' || echo '$(srcdir)/'`unistr.c

libntfs_la-version.lo: version.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-version.lo -MD -MP -MF $(DEPDIR)/libntfs_la-version.Tpo -c -o libntfs_la-version.lo `test -f 'version.c' || echo '$(srcdir)/'`version.c
	$(am__mv) $(DEPDIR)/libntfs_la-version.Tpo $(DEPDIR)/libntfs_la-version.Plo
#	source='version.c' object='libntfs_la-version.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-version.lo `test -f 'version.c' || echo '$(srcdir)/'`version.c

libntfs_la-volume.lo: volume.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -MT libntfs_la-volume.lo -MD -MP -MF $(DEPDIR)/libntfs_la-volume.Tpo -c -o libntfs_la-volume.lo `test -f 'volume.c' || echo '$(srcdir)/'`volume.c
	$(am__mv) $(DEPDIR)/libntfs_la-volume.Tpo $(DEPDIR)/libntfs_la-volume.Plo
#	source='volume.c' object='libntfs_la-volume.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libntfs_la_CFLAGS) $(CFLAGS) -c -o libntfs_la-volume.lo `test -f 'volume.c' || echo '$(srcdir)/'`volume.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man8: $(man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man8dir)" || $(MKDIR_P) "$(DESTDIR)$(man8dir)"
	@list=''; test -n "$(man8dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.8[a-z]*$$/p'; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man8dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man8dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man8dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man8dir)" || exit $$?; }; \
	done; }

uninstall-man8:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man8dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.8[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man8dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man8dir)" && rm -f $$files; }
install-gnomevfsmodulesconfDATA: $(gnomevfsmodulesconf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gnomevfsmodulesconfdir)" || $(MKDIR_P) "$(DESTDIR)$(gnomevfsmodulesconfdir)"
	@list='$(gnomevfsmodulesconf_DATA)'; test -n "$(gnomevfsmodulesconfdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gnomevfsmodulesconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gnomevfsmodulesconfdir)" || exit $$?; \
	done

uninstall-gnomevfsmodulesconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gnomevfsmodulesconf_DATA)'; test -n "$(gnomevfsmodulesconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gnomevfsmodulesconfdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gnomevfsmodulesconfdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(MANS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(gnomevfsmoduleslibdir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(man8dir)" "$(DESTDIR)$(gnomevfsmodulesconfdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-gnomevfsmoduleslibLTLIBRARIES \
	clean-libLTLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-gnomevfsmodulesconfDATA \
	install-gnomevfsmoduleslibLTLIBRARIES install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man8

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-gnomevfsmodulesconfDATA \
	uninstall-gnomevfsmoduleslibLTLIBRARIES \
	uninstall-libLTLIBRARIES uninstall-man

uninstall-man: uninstall-man8

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-gnomevfsmoduleslibLTLIBRARIES clean-libLTLIBRARIES \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-gnomevfsmodulesconfDATA \
	install-gnomevfsmoduleslibLTLIBRARIES install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-man8 install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-gnomevfsmodulesconfDATA \
	uninstall-gnomevfsmoduleslibLTLIBRARIES \
	uninstall-libLTLIBRARIES uninstall-man uninstall-man8


libs:	$(lib_LTLIBRARIES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
